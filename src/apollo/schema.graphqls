type Comment {
  """ mongoid """
  id: String!
  """ тест комментария """
  message: String
  """ отправитель """
  sender: User
  """ id сущности к которой привязан комментарий """
  cell: String
  """ id документа, при создании комментария id документа добавляется автоматически """
  document: String
  """ дата создания комментария, в формате ISO """
  createdate: String
  """ дата обновления комментария, в формате ISO """
  updatedate: String
  """ удален ли комментарий (?) """
  isdelete: Boolean
}
# https://okan.code-artel.com/graphql :
# comment {
  # cell: ID
  # createdat: DateTime
  # id: ID
  # isdelete: Boolean
  # message: String
  # sender: User
  # updatedat: DateTime
# }

type Block {
  """ mongoid """
  id: String!
  """ заголовок """
  name: String
  """ html контент фроалы """
  content: String
  """ номер ячейки в документе """
  number: Int
  """ тип контента: таблица, картинка, текст """
  contenttype: String
}
# https://okan.code-artel.com/graphql :
# Block{
#   content: String
#   contenttype: String
#   id: ID
#   name: String
#   number: Int
# }

type Cell {
  """  mongoid """
  id: String!
  """  имя раздела """
  name: String!
  """  статус проверки ячейки """
  verify: String
  """  id предыдущей ячейки, оно равно id в свойстве parent если ячейка дочерняя другой ячейке и первая по счету """
  prevcell: Cell
  """  id следующей ячейки """
  nextcell: Cell
  """  id родительской ячейки """
  parent: Cell
  """  id первой дочерней ячейки, от этой ячейки далее строятся запросы на получение всех дочерних ячеек """
  children: Cell
  """  говорит нам является ли ячейка названием раздела, а не блоком с контентом """
  isHead: Boolean
  """  контент раздела """
  content: Block
  """  массив комментариев ячейки """
  comments: [Comment]
  """  массив связанных объектов """
  pull: [Cell]
}
# https://okan.code-artel.com/graphql :
# cell {
#   comments: [Comment]
#   content: Block
#   id: ID
#   isHead: Boolean
#   name: String
#   nextcell: Cell
#   parent: Cell
#   prevcell: Cell
#   verify: String
#   pull: [Cell]
# }


type Document {
  """ mongoid"""
  id: String
  """ название документа """
  name: String
  """ корневая ячейка элемента от которого строится граф разделов"""
  children: Cell
  """ null, на согласовании, согласован, не согласован"""
  approvalstatus: String
  """Участники документа"""
  partners: [User]
  """ код документа ОКАН"""
  okancode: String
  """ код документа заказчика"""
  customercode: String
  """ Версия документа """
  version: String
  """  дата создания ревизии """
  createrevisiondate: String
  """ Автори ревизии документа """
  authorrrevision: User
}
# https://okan.code-artel.com/graphql :
# Document{
#   approvalstatus: String
#   cell: Cell
#   children: Cell
#   customercode: String
#   documentnumber: String
#   id: ID
#   name: String
#   okancode: String
#   partners: [User]
# }

type Project {
  """ mongoid"""
  id: String
  """ название проекта"""
  name: String
  """ пользователь создавший проект"""
  author: User
  """ список участников """
  partners: [User]
  """ документы проекта"""
  documents: [Document]
  """дата создания"""
  createdate: String
  """дата обновления"""
  updatedate: String
  """массив ревизий проекта"""
  revisions: [String]
  """Статус состояния проекта: archive - в архиве, working - в работе"""
  status: String
  """Можно ли использовать этот проект как шаблон для других проектов"""
  isTemplate: Boolean
  """ Шаблон на основе которого создается проект """
  template: Project
}
# https://okan.code-artel.com/graphql :
# Project{
#   author: User
#   createdate: DateTime
#   customercode: String
#   documents: [Document]
#   id: ID
#   name: String
#   okancode: String
#   partners: [User]
#   status: String
#   updatedate: DateTime
#   revisions: [Project]
# }

type Resolver {
  id: ID
  module: String
  name: String
}
# https://okan.code-artel.com/graphql :  Также

type Role {
  description: String
  id: ID
  name: String
  resolvers: [Resolver]
}
# https://okan.code-artel.com/graphql : Также

type Marker {
  answer: Boolean
  id: ID
}

type User {
  """ mongoid """
  id: ID
  """ имя пользователя """
  firstname: String
  """ фамилия пользователя """
  lastname: String
  """ отчество пользователя """
  patronymic: String
  """ дата рождения пользователя """
  birthdate: String
  """ Должность """
  position: String
  """ номер телефона пользователя """
  phone: String
  """ адрес ел.почты пользователя """
  email: String
  """ подпись пользователя """
  signature: String
  """ роль пользователя """
  role: Role
}
# https://okan.code-artel.com/graphql :
# User{
#   birthdate: String
#   email: String
#   firstname: String
#   id: ID
#   lastname: String
#   patronymic: String
#   phone: String
#   position: String
#   role: Role
#   signature: String
# }

type Notification {
  """ mongoid """
  id: String,
  """ комментарий, содержит объект комментариф к ячейке """
  comment: Comment,
  """ сообщение уведомления """
  message: String
  """ отправитель """
  sender: User
  """ получатель """
  recipient: User
  """ дата создания в ISO """
  createat: String
}
# https://okan.code-artel.com/graphql :
# Notification{
#   cell: Cell
#   comment: Comment
#   createat: DateTime
#   id: ID
#   message: String
#   recipient: User
#   sender: User
# }




type Query {

# https://okan.code-artel.com/graphql :
  """список пользователей"""
  userlist: [User],
  # query{
  #   userlist{
  #     user
  #   }
  # }

  # useritem(id: String!): User,
  # https://okan.code-artel.com/graphql :
  """ получить пользователя по id"""
  useritem(id: String): User,
  # query ($id: String) {
  #   useritem(id: $id) {
  #     id
  #   }
  # }

# https://okan.code-artel.com/graphql :
  """ Получить текущего авторизованного пользователя """
  currentuseritem: User,
  # {
  #   currentuseritem {
  #     id
  #   }
  # }

  # cellitem(id: String!): Cell
  # https://okan.code-artel.com/graphql :
  """ запросить ячейку по id"""
  cellitem(id: String): Cell,
  # query ($id: String) {
  #   cellitem(id: $id) {
  #     id
  #   }
  # }
  celllist(parent: String): [Cell]


  # cell_marker(cell: String): Boolean
  # https://okan.code-artel.com/graphql :
  """ метод возвращает тру если хотябы у одной дочки были изменения """
  cellMarker(id: String): Marker,
  # query ($id: String) {
  #   cellMarker(id: $id) {
  #     id
  #   }
  # }

  # projectid - id проекта по которому запрашиваются документы
  # documentlist(projectid: String): [Document]
  # https://okan.code-artel.com/graphql :
  """  получить список документов """
  documentlist(approvalstatus: String, author: String!): [Document],
  # query ($approvalstatus: String, $author: String!) {
  #   documentlist(approvalstatus: $approvalstatus, author: $author) {
  #     id
  #   }
  # }

  # documentitem(id: String!) : Document
  # https://okan.code-artel.com/graphql :
  """получить документ по id"""
  documentitem(id: String) : Document,
  # query ($id: String) {
  #   documentitem(id: $id) {
  #     id
  #   }
  # }

  # projectlist(user: String!): [Project]
  # https://okan.code-artel.com/graphql :
  """получить список проектов пользователя"""
  projectList: [Project],
  # {
  #   projectList {
  #     id
  #   }
  # }

# https://okan.code-artel.com/graphql :
  """получить проект по id"""
  projectitem(id: String!): Project,
  # query ($id: String!) {
  #   projectitem(id: $id) {
  #     id
  #   }
  # }


  # revisionlist(id: String!): [Project]
  # https://okan.code-artel.com/graphql :
  """ получить список ревизий проекта"""
  revisionList(id: String!): [Document],


  # revisionitem(id: String!): Project
  # https://okan.code-artel.com/graphql :
  """получить ревизию проекта по id """
  revisionItem(id: String!): Document,
  # query ($id: String!) {
  #   revisionItem(id: $id) {
  #     id
  #   }
  # }


  """ Получить список шаблонов """
  templatelist: [Project]

  # notificationlist(user:String): [Notification]
  # https://okan.code-artel.com/graphql :
  """получить список уведомлений по id пользователя получателя"""
  notificationslist(user:String): [Notification],
  # query ($user: String) {
  #   notificationslist(user: $user) {
  #   id
  # }
}

type Mutation {

  # createuser(
  #   id: String,
  #   firstName: String!,
  #   lastName: String!,
  #   patronymic: String!,
  #   birthdate: String!,
  #   position:String!,
  #   phone: String!,
  #   email: String!,
  #   signature: String!,
  # ): User,
  # https://okan.code-artel.com/graphql :
  """ создание пользователя """
  createuser (
    birthdate: String,
    email: String,
    firstname: String,
    lastname: String,
    patronymic: String,
    phone: String,
    position: String,
    signature: String) : user_resolve_user_create,


  # updateuser(
  #   id: String,
  #   firstName: String,
  #   lastName: String,
  #   patronymic: String,
  #   birthdate: String,
  #   phone: String,
  #   email: String,
  #   signature: String,
  #   position:String,
  # ): User,
# https://okan.code-artel.com/graphql :
  """ обновление пользователя"""
  updateuser (
    birthdate: String,
    email: String,
    firstname: String,
    id: String!,
    lastname: String,
    patronymic: String,
    phone: String,
    position: String,
    role: String,
    signature: String) : user_resolve_user_update,

  # changepassword(user: String!, password: String!, newPassword: String!, confirmNewPassword: String!): User,
  # https://okan.code-artel.com/graphql :
  """ смена пароля пользователя """
  changepassword(newpassword: String!, password: String!, user: String) : user_resolve_change_password,

  # name
  # prevcell - id предыдущей ячейки
  # parent - id родительской ячейки
  # content - содержимое ячейки
  # createcell(name:String,prevcell:String, parent: String, content: String): Cell
  # https://okan.code-artel.com/graphql :
  """ создание ячейки"""
  createcell (
    children: String,
    comments: [String],
    content: String!,
    isHead: Boolean,
    name: String,
    nextcell: String,
    parent: String,
    prevcell: String,
    verify: String) : document_resolve_cell_create,

  # id - mongoid ячейки
  # name - имя ячейки
  # content - html содержимое ячейки
  # prevcell - id предыдущей ячейки
  # nextcell - id следующей ячейки
  # updatecell(id: String!, name: String, content: String, prevcell: String, nextcell: String): Cell
  # https://okan.code-artel.com/graphql :
  """ обновление ячейки """
  updatecell (
    children: String,
    comments: [String],
    content: String,
    contentname: String,
    contenttype: String,
    id: String!,
    isHead: Boolean,
    name: String,
    nextcell: String,
    parent: String,
    prevcell: String,
    verify: String) : document_resolve_cell_update,

  # sender - id отправителя комментария
  # message - сообщение комментария
  # cell - id комментаруемой ячейки
  # createcomment(sender: String!, message: String!, cell: String!): Comment
  # https://okan.code-artel.com/graphql :
  """ создание комментария """
  createcomment (sender: String!, message: String!, cell: String!) : document_resolve_comment_create,

  # id - mongoid комментария
  # message - сообщение комментария
  # isdelete - удален ли комментарий из ячейки
  # updatecomment(id: String!,isdelete: Boolean, message: String): Comment
  # https://okan.code-artel.com/graphql :
  """ обновление комментария """
  updatecomment(sender: String, id: String!, isdelete: Boolean, message: String): document_resolve_comment_update,

  # createdocument(name: String, cell: String): Document
  # https://okan.code-artel.com/graphql :
  """ создание документа """
  createdocument(
    approvalstatus: String,
    children: String,
    customercode: String,
    documentnumber: String,
    name: String!,
    okancode: String,
    partners: [String]): document_resolve_document_create,

  # updatedocument(name: String, cell: String!): Document
  # https://okan.code-artel.com/graphql :
  """ обновление документа"""
  updatedocument (
    approvalstatus: String,
    children: String,
    customercode: String,
    documentnumber: String,
    id: String!,
    name: String!,
    okancode: String,
    partners: [String]) : document_resolve_document_update,

  # name - название проекта
  # document - id документа проекта, это (шаблон)(хз под вопросом)
  # createproject(projectname:String!, document: String!): Project
  # https://okan.code-artel.com/graphql :
  """ создание проекта """
  createproject (
    author: String,
    customercode: String,
    documents: [String],
    name: String!,
    okancode: String,
    template: String,
    partners: [String],
    revisions: [String],
    status: String): project_resolve_project_create,

  # updateproject(id: String, name: String,partner: String, okancode: String, customercode: String, partners: [String]): Project
  # https://okan.code-artel.com/graphql :
  """ Обновление проекта """
  updateproject (
    author: String,
    customercode: String,
    documents: [String],
    id: String!,
    name: String!,
    okancode: String,
    partners: [String],
    revisions: [String],
    status: String): project_resolve_project_update,

  # id - id документа для которого должна быть создана ревизия
  # https://okan.code-artel.com/graphql :
  """ создание ревизии документа """
  createrevision(id: String!): project_resolve_revision_create,

  # target - id ячейки с которой нужно создать связь, по сути дочерняя ячейка
  # parent - id ячейки которая образует связь, ячейка родитель
  # https://okan.code-artel.com/graphql :
  """ метод для связывания ячеек """
  bindingcell(target: [String]!, parent: String!): document_resolve_cell_binding,

  # unbindingcell(cell: String!): Cell
  # https://okan.code-artel.com/graphql :
  """ освобождает ячейки из пулла, не менняя из значения. """
  unbindingcell (cell: String!) : document_resolve_cell_unbinding,

  # activateuser(user:String, password: String): User
  # https://okan.code-artel.com/graphql :
  """ Активация пользователя, на вход получаем логин пользователя и пароль """
  confirmeduser (email: String!, key: String!, password: String!): user_resolve_user_confirmed,

  # recoverypass(user:String): User
  # https://okan.code-artel.com/graphql :
  """ user - принимает login пользователя """
  recoverypassword (email: String!): user_resolve_recovery_password
}




type document_resolve_comment_create {
  comment: Comment
}
type document_resolve_comment_update {
  comment: Comment
}

type document_resolve_document_create {
  document: Document
}
type document_resolve_document_update {
  document: Document
}
type project_resolve_revision_create {
  document: Document
}

type document_resolve_cell_binding {
  cell: Cell
}
type document_resolve_cell_unbinding {
  cell: Cell
}
type document_resolve_cell_create {
  cell: Cell
}
type document_resolve_cell_update {
  cell: Cell
}


type user_resolve_user_update {
  user: User
}
type user_resolve_recovery_password {
  user: User
}
type user_resolve_user_confirmed {
  user: User
}
type user_resolve_change_password{
  user: User
}
type user_resolve_user_create{
  user: User
}

type project_resolve_project_create {
  project: Project
}
type project_resolve_project_update {
  project: Project
}
