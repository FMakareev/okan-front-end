{"version":3,"sources":["jsonToUrlEncoded.js"],"names":["jsonToUrlEncoded","element","key","list","idx","push","encodeURIComponent","join"],"mappings":";;;;;;;;;;;AAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAUC,GAAV,EAA6B;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AAC3D,MAAI,yBAAOF,OAAP,MAAmB,QAAvB,EAAiC;AAC/B,SAAK,IAAMG,GAAX,IAAkBH,OAAlB,EAA2B;AACzBD,MAAAA,gBAAgB,CAACC,OAAO,CAACG,GAAD,CAAR,EAAeF,GAAG,aAAMA,GAAN,cAAaE,GAAb,SAAsBA,GAAxC,EAA6CD,IAA7C,CAAhB;AACD;AACF,GAJD,MAIO;AACLA,IAAAA,IAAI,CAACE,IAAL,WAAaH,GAAb,cAAoBI,kBAAkB,CAACL,OAAD,CAAtC;AACD;;AACD,SAAOE,IAAI,CAACI,IAAL,CAAU,GAAV,CAAP;AACD,CATM;;;eAWQP,gB","sourcesContent":["export const jsonToUrlEncoded = (element, key, list = []) => {\r\n  if (typeof element === 'object') {\r\n    for (const idx in element) {\r\n      jsonToUrlEncoded(element[idx], key ? `${key}[${idx}]` : idx, list);\r\n    }\r\n  } else {\r\n    list.push(`${key}=${encodeURIComponent(element)}`);\r\n  }\r\n  return list.join('&');\r\n};\r\n\r\nexport default jsonToUrlEncoded;\r\n"]}