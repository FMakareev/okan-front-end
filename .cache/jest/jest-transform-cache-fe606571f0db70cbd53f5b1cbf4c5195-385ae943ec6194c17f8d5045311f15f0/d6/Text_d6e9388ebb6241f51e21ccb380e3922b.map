{"version":3,"sources":["Text.js"],"names":["textVariant","key","prop","Text","Box","FontFamilyProperty","display","WordWrapProperty","letterSpacing","LineHeightProperty","textAlign","fontWeight","BackgroundColorProperty","FillSvgProperty","propTypes","children","PropTypes","any","mb","color","string","whiteSpace","textOverflow","overflow","fontSize","fz","lineHeight","lh","defaultProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAGA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AARA;;AAMA;AAIA,IAAMA,WAAW,GAAG,2BAAQ;AAC1BC,EAAAA,GAAG,EAAE,cADqB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAAR,CAApB;AAKA;;;;;AAIO,IAAMC,IAAI;AAAA;AAAG,kCAAOC,QAAP,CAAH;AAAA;AAAA,0EAEbC,sCAFa,EAGbL,WAHa,EAIbM,qBAJa,EAKbC,kCALa,EAMbC,2BANa,EAObC,sCAPa,EAQbC,uBARa,EASbC,wBATa,EAUbC,gDAVa,EAWbC,gCAXa,CAAV,C,CAcP;;;AACAV,IAAI,CAACW,SAAL;AACE;AACAC,EAAAA,QAAQ,EAAEC,sBAAUC,GAFtB;;AAGE;AACAC,EAAAA,EAAE,EAAEF,sBAAUC,GAJhB;;AAKE;AACAE,EAAAA,KAAK,EAAEH,sBAAUI,MANnB;AAOEC,EAAAA,UAAU,EAAEL,sBAAUI,MAPxB;AAQEE,EAAAA,YAAY,EAAEN,sBAAUI,MAR1B;AASEG,EAAAA,QAAQ,EAAEP,sBAAUI,MATtB;;AAUE;AACAI,EAAAA,QAAQ,EAAER,sBAAUC,GAXtB;;AAYE;AACAQ,EAAAA,EAAE,EAAET,sBAAUC,GAbhB;;AAcE;AACAS,EAAAA,UAAU,EAAEV,sBAAUC,GAfxB;;AAgBE;AACAU,EAAAA,EAAE,EAAEX,sBAAUC;AAjBhB,GAmBKX,sBAAQQ,SAnBb,EAoBKH,yBAAWG,SApBhB,EAqBKJ,wBAAUI,SArBf,EAsBKN,4BAAcM,SAtBnB;AAyBAX,IAAI,CAACyB,YAAL,GAAoB;AAClBT,EAAAA,KAAK,EAAE;AADW,CAApB;eAIehB,I","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { display, fontWeight, textAlign, letterSpacing, variant } from 'styled-system';\r\n\r\n/** Style property */\r\nimport { BackgroundColorProperty } from '../../styles/styleProperty/BackgroundColorProperty';\r\nimport { FillSvgProperty } from '../../styles/styleProperty/FillSvgProperty';\r\nimport { FontFamilyProperty } from '../../styles/FontFamilyProperty';\r\nimport { LineHeightProperty } from '../../styles/styleProperty/LineHeightProperty';\r\n\r\n/** View */\r\nimport { Box } from '../Box/Box';\r\nimport { WordWrapProperty } from '@lib/styles/styleProperty/WordWrapProperty';\r\n\r\nconst textVariant = variant({\r\n  key: 'variant.text',\r\n  prop: 'variant',\r\n});\r\n\r\n/**\r\n * Компонент текста\r\n * @example ./Text.example.md\r\n */\r\nexport const Text = styled(Box)`\r\n  cursor: pointer;\r\n  ${FontFamilyProperty};\r\n  ${textVariant};\r\n  ${display};\r\n  ${WordWrapProperty};\r\n  ${letterSpacing};\r\n  ${LineHeightProperty};\r\n  ${textAlign};\r\n  ${fontWeight};\r\n  ${BackgroundColorProperty};\r\n  ${FillSvgProperty};\r\n`;\r\n\r\n// TODO review:nik-z: добавь propTypes для варианта и для шрифта, использую перечисление PropTypes.oneOf и туда передай масив доступных в теме значений\r\nText.propTypes = {\r\n  /**  children React element  */\r\n  children: PropTypes.any,\r\n  /** CSS: mb - margin - bottom */\r\n  mb: PropTypes.any,\r\n  /** CSS : color */\r\n  color: PropTypes.string,\r\n  whiteSpace: PropTypes.string,\r\n  textOverflow: PropTypes.string,\r\n  overflow: PropTypes.string,\r\n  /** CSS : fontSize */\r\n  fontSize: PropTypes.any,\r\n  /** CSS : fontSize */\r\n  fz: PropTypes.any,\r\n  /** CSS : lineHeight */\r\n  lineHeight: PropTypes.any,\r\n  /** CSS : lineHeight */\r\n  lh: PropTypes.any,\r\n\r\n  ...display.propTypes,\r\n  ...fontWeight.propTypes,\r\n  ...textAlign.propTypes,\r\n  ...letterSpacing.propTypes,\r\n};\r\n\r\nText.defaultProps = {\r\n  color: 'color11',\r\n};\r\n\r\nexport default Text;\r\n"]}