{"version":3,"sources":["PictureUploadPreview.js"],"names":["handleDropRejected","args","console","log","PictureUploadPreview","state","preview","files","error","handleDrop","bind","getBase64","length","size","setState","file","onChange","props","input","reader","FileReader","readAsDataURL","onload","result","onerror","value","styles","disabled","mb","br","placeholder","meta","img","Component","PropTypes","string","number","placeholderImage","object","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Icon from 'react-icons-kit';\r\nimport { connect } from 'react-redux';\r\n\r\n/** Icons */\r\nimport { ic_add } from 'react-icons-kit/md/ic_add';\r\n\r\n/** Image */\r\nimport { SvgDownload } from '../../components/Icons/SvgDownload';\r\n\r\n/** Image */\r\nimport Image from '../Image/Image';\r\nimport TooltipBase from '../TooltipBase/TooltipBase';\r\n\r\n/** Css value */\r\nimport { DropZoneStyled, DropZoneIconWrapper, Img, IconStyled } from './PictureUploadPreviewStyled';\r\n\r\nconst handleDropRejected = (...args) => console.log('reject', args);\r\n\r\n/**\r\n * @example ./PictureUploadPreview.example.md\r\n */\r\nexport class PictureUploadPreview extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      preview: null,\r\n      files: [],\r\n      error: null,\r\n    };\r\n    this.handleDrop = this.handleDrop.bind(this);\r\n    this.getBase64 = this.getBase64.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    /** className */\r\n    styles: PropTypes.string,\r\n    /** CSS: margin - bottom */\r\n    mb: PropTypes.number,\r\n    /** CSS: border-radius */\r\n    br: PropTypes.number,\r\n    /** property of input */\r\n    value: PropTypes.string,\r\n    placeholderImage: PropTypes.string,\r\n    /** loading files or picture */\r\n    files: PropTypes.object,\r\n    /** input value */\r\n    disabled: PropTypes.bool,\r\n  };\r\n\r\n  handleDrop(files) {\r\n    if (!files.length && !files[0].preview) {\r\n      return null;\r\n    }\r\n\r\n    if (files[0].size > 600000) {\r\n      this.setState(() => ({ error: 'Размер картинки не должен превышать : 600КВ' }));\r\n      return null;\r\n    } else if (files[0].size < 600000) {\r\n      this.setState(() => ({ error: null }));\r\n    }\r\n\r\n    this.setState(({ files }) => {\r\n      files: files;\r\n    });\r\n    console.log(11, this.state.files);\r\n\r\n    const preview = files[0].preview;\r\n\r\n    this.setState({\r\n      // this.state.preview: preview,\r\n    });\r\n    // console.log(11, this.state.preview);\r\n\r\n    this.getBase64(files[0]);\r\n  }\r\n\r\n  getBase64(file) {\r\n    const {\r\n      input: { onChange },\r\n    } = this.props;\r\n\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function() {\r\n      // console.log(reader.result);\r\n      onChange(reader.result);\r\n    };\r\n    reader.onerror = function(error) {\r\n      console.log('Error: ', error);\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      input: { value },\r\n      styles,\r\n      disabled,\r\n      mb,\r\n      br,\r\n      placeholder,\r\n      meta,\r\n    } = this.props;\r\n\r\n    const { preview, error } = this.state;\r\n\r\n    return (\r\n      <TooltipBase isActive={error} warning={error} left={'40%'}>\r\n        <DropZoneStyled\r\n          disabled={disabled}\r\n          br={br}\r\n          onDrop={this.handleDrop}\r\n          accept=\"image/*\"\r\n          multiple={false}>\r\n          {preview && <Img src={preview} alt=\"image preview\" />}\r\n          {!preview && value && <Img src={value} alt=\"logo\" className={styles && styles.img} />}\r\n          {!preview && !value && (\r\n            <DropZoneIconWrapper disabled={disabled}>\r\n              <div> {placeholder}</div>\r\n\r\n              <div>{SvgDownload()}</div>\r\n            </DropZoneIconWrapper>\r\n          )}\r\n        </DropZoneStyled>\r\n      </TooltipBase>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PictureUploadPreview;\r\n"]}