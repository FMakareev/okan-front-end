{"version":3,"sources":["index.js"],"names":["ProjectEditorWithProject","props","ProjectSidebarWithProject","ProjectEditorPage","state","params","match","user","ProjectItemQuery","id","projectid","loading","data","error","rest","console","Error","projectitem","sectionid","Component","ReactRoutePropTypes","PropTypes","shape","cellid","string","documentid","removeBlock"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;AACA;;AAGA;;AACA;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA5BA;;AAGA;;AAGA;;AAGA;;AAIA;;AAIA;;AAKA;AASA,IAAMA,wBAAwB,GAAG,iCAAY,UAAAC,KAAK;AAAA,SAAI,gCAAC,yBAAD,EAAmBA,KAAnB,CAAJ;AAAA,CAAjB,CAAjC;AACA,IAAMC,yBAAyB,GAAG,iCAAY,UAAAD,KAAK;AAAA,SAAI,gCAAC,0BAAD,EAAoBA,KAApB,CAAJ;AAAA,CAAjB,CAAlC;;IAEaE,iB;;;;;AAaX,6BAAYF,KAAZ,EAAmB;AAAA;;AAAA;AACjB,6HAAMA,KAAN;AACA,UAAKG,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;6BAEQ;AAAA,wBAIH,KAAKH,KAJF;AAAA,UAEGI,MAFH,eAELC,KAFK,CAEGD,MAFH;AAAA,UAGLE,IAHK,eAGLA,IAHK;AAMP,aACE,gCAAC,sBAAD,QACE,gCAAC,kBAAD;AAAO,QAAA,KAAK,EAAEC,4BAAd;AAAgC,QAAA,SAAS,EAAE;AAACC,UAAAA,EAAE,EAAEJ,MAAM,CAACK;AAAZ;AAA3C,SACG,gBAAqC;AAAA,YAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,YAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,YAApBC,KAAoB,QAApBA,KAAoB;AAAA,YAAVC,IAAU;;AACpC,YAAIH,OAAJ,EAAa;AACX,iBAAO,aAAP;AACD;;AACD,YAAIE,KAAJ,EAAW;AACTE,UAAAA,OAAO,CAACF,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AACA,gBAAMG,KAAK,CAACH,KAAD,CAAX;AACD;;AACD,eAEE,gCAAC,sCAAD,QAEE,gCAAC,wBAAD;AACE,UAAA,MAAM,EAAER,MADV;AAEE,UAAA,WAAW,EAAEO,IAAI,CAACK;AAFpB,WAKE,gCAAC,8BAAD;AAAgB,UAAA,EAAE,EAAE;AAApB,WACE,gCAAC,yBAAD,OADF,CALF,EASE,gCAAC,0CAAD,QACE,gCAAC,wBAAD;AAA0B,UAAA,SAAS,EAAEZ,MAAM,CAACa;AAA5C,UADF,CATF,CAFF,CAFF;AAsBD,OA/BH,CADF,CADF;AAqCD;;;EA7DoCC,gB;;;iCAA1BhB,iB,kDAENiB,wC;AACHd,EAAAA,KAAK,EAAEe,sBAAUC,KAAV,CAAgB;AACrBjB,IAAAA,MAAM,EAAEgB,sBAAUC,KAAV,CAAgB;AACtBC,MAAAA,MAAM,EAAEF,sBAAUG,MADI;AAEtBN,MAAAA,SAAS,EAAEG,sBAAUG,MAFC;AAGtBC,MAAAA,UAAU,EAAEJ,sBAAUG,MAHA;AAItBd,MAAAA,SAAS,EAAEW,sBAAUG;AAJC,KAAhB;AADa,GAAhB;;AA8DX,4BAAArB,iBAAiB,GAAG,yBAClB,UAACC,KAAD;AAAA,SAAY;AACVG,IAAAA,IAAI,EAAE,iCAAiBH,KAAjB;AADI,GAAZ;AAAA,CADkB,EAIlB;AAACsB,EAAAA,WAAW,EAAXA;AAAD,CAJkB,EAKlBvB,iBALkB,CAApB;eAOeA,iB","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Query} from 'react-apollo';\r\nimport styled from 'styled-components';\r\nimport {connect} from 'react-redux';\r\n\r\n/** css style */\r\nimport '../../../../assets/style/editor-cell_content.css';\r\n\r\n/** Graphql schema */\r\nimport ProjectItemQuery from '../../graphql/ProjectItemQuery.graphql';\r\n\r\n/**PropTypes */\r\nimport {ReactRoutePropTypes} from '../../../../propTypes/ReactRoutePropTypes';\r\n\r\n/** View */\r\nimport ErrorCatch from '@lib/ui/ErrorCatch/ErrorCatch';\r\nimport {Flex} from '@lib/ui/Flex/Flex';\r\n\r\n/** Components */\r\nimport ProjectSidebar from '../../component/ProjectSidebar/ProjectSidebar';\r\nimport ProjectEditor from '../../component/ProjectEditor/ProjectEditor';\r\n\r\n/** Context */\r\nimport {\r\n  withProject,\r\n} from '../../component/ProjectContext/ProjectContext';\r\n\r\n/** Redux action to remove BlockId from store */\r\nimport {removeBlock} from '../../../../store/reducers/blocksBinding/actions';\r\nimport {getUserFromStore} from '../../../../store/reducers/user/selectors';\r\nimport ProjectStore from \"../../component/ProjectStore/ProjectStore\";\r\nimport {SideBarWrapper} from \"../../component/SideBarWrapper/SideBarWrapper\";\r\nimport {ProjectPageWrapper} from \"../../component/ProjectPageWrapper/ProjectPageWrapper\";\r\nimport {ProjectEditorWrapper} from \"../../component/ProjectEditorWrapper/ProjectEditorWrapper\";\r\n\r\n\r\nconst ProjectEditorWithProject = withProject(props => <ProjectEditor {...props} />);\r\nconst ProjectSidebarWithProject = withProject(props => <ProjectSidebar {...props} />);\r\n\r\nexport class ProjectEditorPage extends Component {\r\n  static propTypes = {\r\n    ...ReactRoutePropTypes,\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        cellid: PropTypes.string,\r\n        sectionid: PropTypes.string,\r\n        documentid: PropTypes.string,\r\n        projectid: PropTypes.string,\r\n      }),\r\n    }),\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      match: {params},\r\n      user,\r\n    } = this.props;\r\n\r\n    return (\r\n      <ErrorCatch>\r\n        <Query query={ProjectItemQuery} variables={{id: params.projectid}}>\r\n          {({loading, data, error, ...rest}) => {\r\n            if (loading) {\r\n              return 'Загрузка...';\r\n            }\r\n            if (error) {\r\n              console.error('Error:', error);\r\n              throw Error(error);\r\n            }\r\n            return (\r\n\r\n              <ProjectPageWrapper>\r\n\r\n                <ProjectStore\r\n                  params={params}\r\n                  projectitem={data.projectitem}\r\n                >\r\n\r\n                  <SideBarWrapper id={'SideBarWrapper'}>\r\n                    <ProjectSidebarWithProject/>\r\n                  </SideBarWrapper>\r\n\r\n                  <ProjectEditorWrapper>\r\n                    <ProjectEditorWithProject sectionid={params.sectionid}/>\r\n                  </ProjectEditorWrapper>\r\n\r\n                </ProjectStore>\r\n\r\n              </ProjectPageWrapper>\r\n\r\n            );\r\n          }}\r\n        </Query>\r\n      </ErrorCatch>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nProjectEditorPage = connect(\r\n  (state) => ({\r\n    user: getUserFromStore(state),\r\n  }),\r\n  {removeBlock},\r\n)(ProjectEditorPage);\r\n\r\nexport default ProjectEditorPage\r\n"]}