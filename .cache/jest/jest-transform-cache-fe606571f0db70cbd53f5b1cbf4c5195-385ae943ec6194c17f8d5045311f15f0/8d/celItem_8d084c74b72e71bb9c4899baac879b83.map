{"version":3,"sources":["celItem.js"],"names":["celItem","id","prevcell","nextcell","childcell","parent","name","faker","company","companyName","verify","random","arrayElement","CELL_STATUS_CHECKED","CELL_STATUS_NOT_CHECKED","CELL_STATUS_CHANGED","children","isHead","content","number","lorem","paragraph","contenttype","comments","pull","approvalstatus"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAKA;;AACA;;AAEO,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAAiD;AAAA,MAA/CC,EAA+C,QAA/CA,EAA+C;AAAA,MAA3CC,QAA2C,QAA3CA,QAA2C;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,MAAY,QAAZA,MAAY;AACtE,SAAO;AACL;AACAJ,IAAAA,EAAE,EAAEA,EAAE,IAAI,yCAFL;AAGL;AACAK,IAAAA,IAAI,EAAEC,kBAAMC,OAAN,CAAcC,WAAd,EAJD;AAKL;AACAC,IAAAA,MAAM,EAAEH,kBAAMI,MAAN,CAAaC,YAAb,CAA0B,CAChCC,mCADgC,EAEhCC,uCAFgC,EAGhCC,mCAHgC,CAA1B,CANH;AAWL;AACAb,IAAAA,QAAQ,EAAEA,QAAQ,sCACbF,OAAO,CAAC;AAACC,MAAAA,EAAE,EAAEC;AAAL,KAAD,CADM,IAGd,IAfC;AAgBL;AACAC,IAAAA,QAAQ,EAAEA,QAAQ,sCACbH,OAAO,CAAC;AAACC,MAAAA,EAAE,EAAEE;AAAL,KAAD,CADM,IAGd,IApBC;AAqBL;AACAE,IAAAA,MAAM,EAAEA,MAAM,sCACTL,OAAO,CAAC;AAACC,MAAAA,EAAE,EAAEI;AAAL,KAAD,CADE,IAGV,IAzBC;AA0BL;AACAW,IAAAA,QAAQ,EAAEZ,SAAS,sCACdJ,OAAO,CAAC;AAACC,MAAAA,EAAE,EAAEG;AAAL,KAAD,CADO,IAEf,IA7BC;AA8BL;AACA;AACAa,IAAAA,MAAM,EAAE,IAhCH;AAiCL;AACAC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAEZ,kBAAMI,MAAN,CAAaQ,MAAb,EADD;AAEP;AACAlB,MAAAA,EAAE,EAAE,yCAHG;AAIP;AACAK,MAAAA,IAAI,EAAEC,kBAAMC,OAAN,CAAcC,WAAd,EALC;AAMP;AACAS,MAAAA,OAAO,EAAEX,kBAAMa,KAAN,CAAYC,SAAZ,EAPF;AAQP;AACAC,MAAAA,WAAW,EAAEf,kBAAMI,MAAN,CAAaC,YAAb,CAA0B,CAAC,OAAD,EAAU,MAAV,EAAkB,KAAlB,CAA1B;AATN,KAlCJ;AA6CL;AACAW,IAAAA,QAAQ,EAAE,CAAC,+BAAD,CA9CL;AA+CL;AACAC,IAAAA,IAAI,EAAE,EAhDD;AAiDL;AACAC,IAAAA,cAAc,EAAE;AAlDX,GAAP;AAoDD,CArDM","sourcesContent":["import faker from 'faker';\r\nimport {\r\n  CELL_STATUS_CHECKED,\r\n  CELL_STATUS_NOT_CHECKED,\r\n  CELL_STATUS_CHANGED,\r\n} from '../../../shared/approvalStatus';\r\nimport {getRandomMongoID} from '../../helpers/getRandomMongoid';\r\nimport {commentitem} from \"./commentitem\";\r\n\r\nexport const celItem = ({id, prevcell, nextcell, childcell, parent}) => {\r\n  return {\r\n    // mongoid\r\n    id: id || getRandomMongoID(),\r\n    // имя раздела\r\n    name: faker.company.companyName(),\r\n    // статус проверки ячейки\r\n    verify: faker.random.arrayElement([\r\n      CELL_STATUS_CHECKED,\r\n      CELL_STATUS_NOT_CHECKED,\r\n      CELL_STATUS_CHANGED,\r\n    ]),\r\n    // id предыдущей ячейки, оно равно id в свойстве parent если ячейка дочерняя другой ячейке и первая по счету\r\n    prevcell: prevcell ? {\r\n      ...celItem({id: prevcell,}),\r\n\r\n    } : null,\r\n    // id следующей ячейки\r\n    nextcell: nextcell ? {\r\n      ...celItem({id: nextcell}),\r\n\r\n    } : null,\r\n    // id родительской ячейки\r\n    parent: parent ? {\r\n      ...celItem({id: parent}),\r\n\r\n    } : null,\r\n    // id первой дочерней ячейки, от этой ячейки далее строятся запросы на получение всех дочерних ячеек\r\n    children: childcell ? {\r\n      ...celItem({id: childcell}),\r\n    } : null,\r\n    // говорит нам является ли ячейка названием раздела, а не блоком с контентом,\r\n    // если равно false то id в поле childCell указывает не на дочернюю категорию, а на дочерний блок с контентом\r\n    isHead: true,\r\n    // контент раздела\r\n    content: {\r\n      number: faker.random.number(),\r\n      // mongoid\r\n      id: getRandomMongoID(),\r\n      // заголовок\r\n      name: faker.company.companyName(),\r\n      // html контент фроалы\r\n      content: faker.lorem.paragraph(),\r\n      // тип контента: таблица, картинка, текст\r\n      contenttype: faker.random.arrayElement(['table', 'text', 'img']),\r\n    },\r\n    // // массив комментариев ячейки\r\n    comments: [commentitem()],\r\n    // массив связанных объектов\r\n    pull: [],\r\n    // null, на согласовании, согласован, не согласован\r\n    approvalstatus: '',\r\n  };\r\n};\r\n"]}