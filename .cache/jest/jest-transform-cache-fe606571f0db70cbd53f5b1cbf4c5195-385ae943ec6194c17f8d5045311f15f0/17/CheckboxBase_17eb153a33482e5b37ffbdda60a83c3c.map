{"version":3,"sources":["CheckboxBase.js"],"names":["Wrapper","styled","div","space","Input","input","offCheckbox","onCheckbox","CheckboxBase","props","index","checked","disabled","children","id","value","Component","PropTypes","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAFA;AAIA,IAAMA,OAAO;AAAA;AAAGC,6BAAOC,GAAV;AAAA;AAAA,cACTC,mBADS,CAAb;;AAIA,IAAMC,KAAK;AAAA;AAAGH,6BAAOI,KAAV;AAAA;AAAA,qoBAkBiBC,uBAlBjB,EA8CiBC,sBA9CjB,CAAX;AAmDA;;;;;;IAIaC,Y;;;;;;;;;;;;6BAWF;AAAA,wBACmD,KAAKC,KADxD;AAAA,UACCJ,KADD,eACCA,KADD;AAAA,UACQK,KADR,eACQA,KADR;AAAA,UACeC,OADf,eACeA,OADf;AAAA,UACwBC,QADxB,eACwBA,QADxB;AAAA,UACkCC,QADlC,eACkCA,QADlC;AAAA,UAC4CC,EAD5C,eAC4CA,EAD5C;AAEP,aACE,gCAAC,OAAD,QACE,gCAAC,KAAD;AACE,QAAA,EAAE,4BAAqBA,EAArB,CADJ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,cAAc,EAAET,KAAK,CAACU,KAHxB;AAIE,QAAA,OAAO,EAAEJ,OAJX;AAKE,QAAA,QAAQ,EAAEC;AALZ,SAMMP,KANN;AAOE,QAAA,IAAI,oBAAaS,EAAb;AAPN,SADF,EAWE;AAAO,QAAA,OAAO,4BAAqBA,EAArB;AAAd,SAA0CD,QAA1C,CAXF,CADF;AAeD;;;EA5B+BG,gB;;;iCAArBR,Y,eACQ;AACjB;;AACA;AACAI,EAAAA,QAAQ,EAAEK,sBAAUC,IAHH;;AAIjB;AACAP,EAAAA,OAAO,EAAEM,sBAAUC;AALF,C;iCADRV,Y,kBASW,E;eAsBTA,Y","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { space } from 'styled-system';\r\n\r\n/** Image */\r\nimport onCheckbox from '../../assets/image/onCheckbox.png';\r\nimport offCheckbox from '../../assets/image/offCheckbox.png';\r\n\r\nconst Wrapper = styled.div`\r\n  ${space};\r\n`;\r\n\r\nconst Input = styled.input`\r\n  position: absolute;\r\n  opacity: 0;\r\n\r\n  & + label {\r\n    position: relative;\r\n    display: block;\r\n    padding: 0;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & + label:before {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0px;\r\n    top: 0px;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-image: url(${offCheckbox}) !important;\r\n    background-repeat: no-repeat;\r\n    -webkit-box-sizing: border-box;\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  &:checked + label:before {\r\n    display: none;\r\n  }\r\n\r\n  &:disabled + label {\r\n    color: #b8b8b8;\r\n    cursor: auto;\r\n  }\r\n\r\n  &:disabled + label:before {\r\n    -webkit-box-shadow: none;\r\n    box-shadow: none;\r\n    background-color: #ddd;\r\n  }\r\n\r\n  &:checked + label:after {\r\n    content: '';\r\n    position: absolute;\r\n    left: 0px;\r\n    top: -2px;\r\n    width: 32px;\r\n    height: 32px;\r\n    background-image: url(${onCheckbox}) !important;\r\n    background-repeat: no-repeat;\r\n  }\r\n`;\r\n\r\n/**\r\n * Компонент чекбокса базового\r\n * @example ./CheckboxBase.example.md\r\n */\r\nexport class CheckboxBase extends Component {\r\n  static propTypes = {\r\n    // input: inputPropTypes,\r\n    /** The disabled attribute specifies that the input field is disabled. */\r\n    disabled: PropTypes.bool,\r\n    /** Text field form with a pre-selected checkbox. */\r\n    checked: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {};\r\n\r\n  render() {\r\n    const { input, index, checked, disabled, children, id } = this.props;\r\n    return (\r\n      <Wrapper>\r\n        <Input\r\n          id={`styled-checkbox-${id}`}\r\n          type=\"checkbox\"\r\n          defaultChecked={input.value}\r\n          checked={checked}\r\n          disabled={disabled}\r\n          {...input}\r\n          name={`partners${id}`}\r\n        />\r\n\r\n        <label htmlFor={`styled-checkbox-${id}`}>{children}</label>\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckboxBase;\r\n"]}