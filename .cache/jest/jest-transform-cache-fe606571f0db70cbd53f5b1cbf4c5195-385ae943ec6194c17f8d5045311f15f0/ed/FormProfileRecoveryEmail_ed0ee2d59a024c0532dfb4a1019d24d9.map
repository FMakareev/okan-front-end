{"version":3,"sources":["FormProfileRecoveryEmail.js"],"names":["BoxStyled","Box","props","borderRadius","notificationOpts","email","success","title","message","position","autoDismiss","error","FormProfileRecoveryEmail","state","submit","bind","value","data","variables","Object","assign","then","response","setNotificationSuccess","reset","setNotificationError","SubmissionError","_error","handleSubmit","pristine","submitting","invalid","TextFieldWithTooltip","Component","formPropTypes","RecoveryPasswordMutation","name","values","dispatch","form"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {graphql} from 'react-apollo';\r\nimport styled from 'styled-components';\r\nimport {success, error} from 'react-notification-system-redux';\r\nimport {Field, reduxForm, SubmissionError, Form, getFormValues} from 'redux-form';\r\nimport {captureException} from '../../../../hocs/withSentry/withSentry';\r\n\r\n/**View */\r\nimport TextFieldWithTooltip from '@lib/ui/TextFieldWithTooltip/TextFieldWithTooltip';\r\nimport ButtonWithImage from '@lib/ui/ButtonWithImage/ButtonWithImage';\r\nimport {SvgPlay} from '@lib/ui/Icons/SvgPlay';\r\nimport Box from '@lib/ui/Box/Box';\r\n\r\n/**PropTypes */\r\nimport {formPropTypes} from '../../../../propTypes/Forms/FormPropTypes';\r\n\r\n/** Styles property */\r\nimport BorderRadiusProperty from '../../../../styles/styleProperty/BorderRadiusProperty';\r\n\r\n\r\n/** GraphQL schema */\r\nimport RecoveryPasswordMutation from './RecoveryPasswordMutation.graphql';\r\n\r\nconst BoxStyled = styled(Box)`\r\n  input {\r\n    ${props => BorderRadiusProperty({...props, borderRadius: '5px'})};\r\n  }\r\n`;\r\n\r\nconst notificationOpts = email => ({\r\n  success: {\r\n    title: 'Пароль сброшен',\r\n    message: `Письмо отправлено на почту ${email}`,\r\n    position: 'tr',\r\n    autoDismiss: 5,\r\n  },\r\n  error: {\r\n    title: 'Произошла ошибка',\r\n    message: 'Сбросте кеш браузера и повторите попытку.',\r\n    position: 'tr',\r\n    autoDismiss: 5,\r\n  },\r\n});\r\n\r\nexport class FormProfileRecoveryEmail extends Component {\r\n  static propTypes = {...formPropTypes};\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(value) {\r\n    const data = {variables: Object.assign({}, value)};\r\n\r\n    return this.props['@apollo/create'](data)\r\n      .then(response => {\r\n        this.props.setNotificationSuccess(notificationOpts(value.email).success);\r\n        this.props.reset();\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        const {message} = error;\r\n        this.props.setNotificationError(notificationOpts().error);\r\n        captureException(error);\r\n\r\n        throw new SubmissionError({_error: message});\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const {handleSubmit, pristine, submitting, invalid} = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit(this.submit)}>\r\n        <BoxStyled mb={4}>\r\n          <Field\r\n            name=\"email\"\r\n            component={TextFieldWithTooltip}\r\n            placeholder={'email@okan.su'}\r\n            type=\"text\"\r\n            size={'md'}\r\n            fontFamily={'secondary'}\r\n            // validate={isEmail}\r\n          />\r\n        </BoxStyled>\r\n\r\n        <ButtonWithImage\r\n          type=\"submit\"\r\n          variant={'large'}\r\n          size={'medium'}\r\n          children={'Восстановить пароль'}\r\n          rightIcon={SvgPlay()}\r\n          ml={9}\r\n          disabled={pristine || submitting || invalid}\r\n          width={'100%'}\r\n          widthIcon={'10px'}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFormProfileRecoveryEmail = graphql(RecoveryPasswordMutation, {\r\n  name: '@apollo/create',\r\n})(FormProfileRecoveryEmail);\r\n\r\nFormProfileRecoveryEmail = connect(\r\n  state => ({\r\n    values: getFormValues('FormProfileRecoveryEmail')(state),\r\n  }),\r\n  dispatch => ({\r\n    setNotificationSuccess: message => dispatch(success(message)),\r\n    setNotificationError: message => dispatch(error(message)),\r\n  }),\r\n)(FormProfileRecoveryEmail);\r\n\r\nFormProfileRecoveryEmail = reduxForm({\r\n  form: 'FormProfileRecoveryEmail',\r\n})(FormProfileRecoveryEmail);\r\n\r\nexport default FormProfileRecoveryEmail;\r\n"]}