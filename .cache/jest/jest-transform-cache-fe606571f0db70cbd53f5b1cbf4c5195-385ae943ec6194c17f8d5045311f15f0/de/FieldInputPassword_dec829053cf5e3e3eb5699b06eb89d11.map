{"version":3,"sources":["FieldInputPassword.js"],"names":["BtnEye","styled","div","FieldInputPassword","props","state","type","isOpen","handleClick","bind","e","setState","fill","Component","name","PropTypes","string","placeholder","validate","func","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAGA;;AACA;;AAGA;;AALA;;AAIA;AAGA,IAAMA,MAAM;AAAA;AAAGC,6BAAOC,GAAV;AAAA;AAAA,uBAAZ;;IAIaC,kB;;;;;AACX,8BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,8HAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,MAAM,EAAE;AAA5B,KAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,gDAAnB;AAJiB;AAKlB;;;;gCAeWC,C,EAAG;AACb,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAE,CAAC,KAAKF,KAAL,CAAWE,MAAtB;AAA8BD,QAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWE,MAAX,GAAoB,UAApB,GAAiC;AAArE,OAAd;AACD;;;6BAEQ;AAAA,wBACkB,KAAKF,KADvB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACOC,MADP,eACOA,MADP;AAGP,aACE,gCAAC,oBAAD;AAAU,QAAA,KAAK,EAAE;AAAjB,SACE,gCAAC,gCAAD;AAAsB,QAAA,IAAI,EAAE;AAA5B,SAAuC,KAAKH,KAA5C;AAAmD,QAAA,IAAI,EAAEE;AAAzD,SADF,EAGE,gCAAC,gBAAD;AAAU,QAAA,GAAG,EAAE,KAAf;AAAsB,QAAA,KAAK,EAAE;AAA7B,SACE,gCAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKE,WAAtB;AAAmC,QAAA,YAAY,EAAE;AAAjD,SACGD,MAAM,GACL;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,IAAI,EAAE;AAAR;AAAZ,SAAkC,qBAAlC,CADK,GAGL;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,IAAI,EAAE;AAAR;AAAZ,cAAmC,qBAAnC,CAJJ,CADF,CAHF,CADF;AAeD;;;EA3CqCC,gB;;;iCAA3BV,kB,eAQQ;AACjB;AACAW,EAAAA,IAAI,EAAEC,sBAAUC,MAFC;;AAGjB;AACAC,EAAAA,WAAW,EAAEF,sBAAUC,MAJN;;AAKjB;AACAE,EAAAA,QAAQ,EAAEH,sBAAUI,IANH;;AAOjB;AACAb,EAAAA,IAAI,EAAES,sBAAUC,MARC;;AASjB;AACAT,EAAAA,MAAM,EAAEQ,sBAAUK;AAVD,C;eAsCNjB,kB","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Absolute } from 'rebass';\r\nimport styled from 'styled-components';\r\n\r\n/** View */\r\nimport Relative from '@lib/ui/Relative/Relative';\r\nimport TextFieldWithTooltip from '@lib/ui/TextFieldWithTooltip/TextFieldWithTooltip';\r\n\r\n/** Image */\r\nimport { SvgEye } from '@lib/ui/Icons/SvgEye';\r\n\r\nconst BtnEye = styled.div`\r\n  cursor: pointer;\r\n`;\r\n\r\nexport class FieldInputPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { type: 'password', isOpen: false };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    /** name input */\r\n    name: PropTypes.string,\r\n    /** placeholder input */\r\n    placeholder: PropTypes.string,\r\n    /** validation */\r\n    validate: PropTypes.func,\r\n    /** type input */\r\n    type: PropTypes.string,\r\n    /** open input password */\r\n    isOpen: PropTypes.bool,\r\n  };\r\n\r\n  handleClick(e) {\r\n    this.setState({ isOpen: !this.state.isOpen, type: this.state.isOpen ? 'password' : 'text' });\r\n  }\r\n\r\n  render() {\r\n    const { type, isOpen } = this.state;\r\n\r\n    return (\r\n      <Relative width={'100%'}>\r\n        <TextFieldWithTooltip left={'40%'} {...this.props} type={type} />\r\n\r\n        <Absolute top={'33%'} right={'4%'}>\r\n          <BtnEye onClick={this.handleClick} borderRadius={5}>\r\n            {isOpen ? (\r\n              <div style={{ fill: '#00649C' }}>{SvgEye()}</div>\r\n            ) : (\r\n              <div style={{ fill: '#848484' }}> {SvgEye()}</div>\r\n            )}\r\n          </BtnEye>\r\n        </Absolute>\r\n      </Relative>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FieldInputPassword;\r\n"]}