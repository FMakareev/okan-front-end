{"version":3,"sources":["index.client.js"],"names":["client","ApolloClient","cache","InMemoryCache","connectToDevTools","link","uri","ENDPOINT_CLIENT","credentials","fetch","ssrForceFetchDelay"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AAJA;AAOO,IAAMA,MAAM,GAAG,SAATA,MAAS,GAAM;AAC1B;AACA,SAAO,IAAIC,0BAAJ,CAAiB;AACtB;AACAC,IAAAA,KAAK,EAAE,IAAIC,kCAAJ,EAFe;AAGtBC,IAAAA,iBAAiB,EAAE,IAHG;AAItBC,IAAAA,IAAI,EAAE,oCAAe;AACnBC,MAAAA,GAAG,YAAKC,eAAL,aADgB;AAEnBC,MAAAA,WAAW,EAAE,aAFM;AAGnBC,MAAAA,KAAK,EAALA;AAHmB,KAAf,CAJgB;AAStBC,IAAAA,kBAAkB,EAAE;AATE,GAAjB,CAAP;AAWD,CAbM;;;eAeQV,M","sourcesContent":["/* global ENDPOINT_CLIENT */\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport fetch from 'unfetch';\r\n\r\n\r\nexport const client = () => {\r\n  // return mocksClient;\r\n  return new ApolloClient({\r\n    // cache: new InMemoryCache().restore(window.APOLLO_STATE),\r\n    cache: new InMemoryCache(),\r\n    connectToDevTools: true,\r\n    link: createHttpLink({\r\n      uri: `${ENDPOINT_CLIENT}/graphql`,\r\n      credentials: 'same-origin',\r\n      fetch,\r\n    }),\r\n    ssrForceFetchDelay: 100,\r\n  });\r\n};\r\n\r\nexport default client;\r\n"]}