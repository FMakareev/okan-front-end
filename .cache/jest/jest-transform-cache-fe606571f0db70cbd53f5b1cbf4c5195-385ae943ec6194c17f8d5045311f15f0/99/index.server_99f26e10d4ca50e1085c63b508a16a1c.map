{"version":3,"sources":["index.server.js"],"names":["client","req","ApolloClient","ssrMode","link","uri","ENDPOINT_SERVER","credentials","fetch","headers","Cookie","header","fetchOptions","agent","https","Agent","rejectUnauthorized","queryDeduplication","connectToDevTools","cache","InMemoryCache"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AALA;AAMA;AAEO,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAAC,GAAG,EAAI;AAC3B;AACA,SAAO,IAAIC,0BAAJ,CAAiB;AACtBC,IAAAA,OAAO,EAAE,IADa;AAEtB;AACA;AACAC,IAAAA,IAAI,EAAE,oCAAe;AACnBC,MAAAA,GAAG,YAAKC,eAAL,aADgB;AAEnBC,MAAAA,WAAW,EAAE,aAFM;AAGnBC,MAAAA,KAAK,EAALA,2BAHmB;AAInBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAET,GAAG,CAACU,MAAJ,CAAW,QAAX;AADD,OAJU;;AAOnB;AACAC,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,IAAIC,kBAAMC,KAAV,CAAgB;AAAEC,UAAAA,kBAAkB,EAAE;AAAtB,SAAhB;AADK;AARK,KAAf,CAJgB;AAgBtBC,IAAAA,kBAAkB,EAAE,IAhBE;AAiBtBC,IAAAA,iBAAiB,EAAE,IAjBG;AAkBtBC,IAAAA,KAAK,EAAE,IAAIC,kCAAJ;AAlBe,GAAjB,CAAP;AAoBD,CAtBM;;;eAwBQpB,M","sourcesContent":["/* global ENDPOINT_SERVER */\r\nimport { ApolloClient } from 'apollo-client';\r\nimport { createHttpLink } from 'apollo-link-http';\r\nimport { InMemoryCache } from 'apollo-cache-inmemory';\r\nimport fetch from 'isomorphic-fetch';\r\nimport https from 'https';\r\n// import mocksClient from './mocksClient';\r\n\r\nexport const client = req => {\r\n  // return mocksClient;\r\n  return new ApolloClient({\r\n    ssrMode: true,\r\n    // Remember that this is the interface the SSR server will use to connect to the\r\n    // API server, so we need to ensure it isn't firewalled, etc\r\n    link: createHttpLink({\r\n      uri: `${ENDPOINT_SERVER}/graphql`,\r\n      credentials: 'same-origin',\r\n      fetch,\r\n      headers: {\r\n        Cookie: req.header('Cookie'),\r\n      },\r\n      /** @desc https://stackoverflow.com/questions/14262986/node-js-hostname-ip-doesnt-match-certificates-altnames */\r\n      fetchOptions: {\r\n        agent: new https.Agent({ rejectUnauthorized: false }),\r\n      },\r\n    }),\r\n    queryDeduplication: true,\r\n    connectToDevTools: true,\r\n    cache: new InMemoryCache(),\r\n  });\r\n};\r\n\r\nexport default client;\r\n"]}