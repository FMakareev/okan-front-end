{"version":3,"sources":["index.js"],"names":["has","Object","prototype","hasOwnProperty","ProjectListPage","user","props","id","ProjectListQuery","data","projectList","ProjectList","Component","ReactRoutePropTypes","state"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AAGA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AAGA;;AAGA;;AAvBA;;AAGA;;AAUA;;AAGA;;AAGA;;AAGA;AAGA,IAAMA,GAAG,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAA7B;;IAMaC,e;;;;;;;;;;;;;;;;;8FAGH,E;;;;;;6BAEC;AAAA,UACAC,IADA,GACQ,KAAKC,KADb,CACAD,IADA;AAGP,aACE,gCAAC,sBAAD,QACE,gCAAC,gBAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,cAAc,EAAE;AAA7B,SACE,gCAAC,qBAAD;AAAW,QAAA,QAAQ,EAAE,OAArB;AAA8B,QAAA,KAAK,EAAE;AAArC,SACE,gCAAC,6BAAD;AACE,QAAA,SAAS,EAAE,aADb;AAEE,QAAA,QAAQ,EAAE,CAFZ;AAGE,QAAA,UAAU,EAAE,CAHd;AAIE,QAAA,cAAc,EAAE;AACdE,UAAAA,EAAE,EAAEF,IAAI,IAAIA,IAAI,CAACE;AADH,SAJlB;AAOE,QAAA,KAAK,EAAEC;AAPT,SASG,UAACF,KAAD;AAAA,eACC,gCAAC,0BAAD,gCACMA,KADN;AAEE,UAAA,IAAI,EAAEA,KAAK,CAACG,IAAN,IAAcH,KAAK,CAACG,IAAN,CAAWC,WAFjC;AAGE,UAAA,QAAQ,EAAEC;AAHZ,WADD;AAAA,OATH,CADF,EAmBE,gCAAC,UAAD;AAAM,QAAA,EAAE,EAAE,CAAV;AAAa,QAAA,EAAE,uBAAf;AAAwC,QAAA,cAAc,EAAE;AAAxD,SACE,gCAAC,gCAAD;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,OAFX;AAGE,QAAA,IAAI,EAAE,QAHR;AAIE,QAAA,QAAQ,EAAE,gBAJZ;AAKE,QAAA,SAAS,EAAE,gCAAC,gBAAD,OALb;AAME,QAAA,EAAE,EAAE,CANN;AAOE,QAAA,KAAK,EAAE,MAPT;AAQE,QAAA,SAAS,EAAE;AARb,QADF,CAnBF,CADF,CADF,CADF;AAwCD;;;EAhDkCC,gB;;;iCAAxBR,e,kDACYS,wC;AAkDzB,0BAAAT,eAAe,GAAG,yBAAQ,UAAAU,KAAK;AAAA,SAAK;AAClCT,IAAAA,IAAI,EAAE,iCAAiBS,KAAjB;AAD4B,GAAL;AAAA,CAAb,EAEdV,eAFc,CAAlB;eAGeA,e","sourcesContent":["import React, {Component} from 'react';\r\nimport * as Sentry from '@sentry/browser';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\n/**PropTypes */\r\nimport {ReactRoutePropTypes} from '../../../../propTypes/ReactRoutePropTypes';\r\n\r\n/** View */\r\nimport ErrorCatch from '@lib/ui/ErrorCatch/ErrorCatch';\r\nimport Flex from '@lib/ui/Flex/Flex';\r\nimport Container from '@lib/ui/Container/Container';\r\nimport {ButtonWithImage} from '@lib/ui/ButtonWithImage/ButtonWithImage';\r\nimport {Link} from '@lib/ui/Link/Link';\r\nimport PaginationPageHOC from '@lib/ui/PaginationPageHOC/PaginationPageHOC';\r\nimport PaginationPage from '@lib/ui/PaginationPage/PaginationPage';\r\nimport SmallPreloader from '@lib/ui/SmallPreloader/SmallPreloader';\r\n\r\n/** components */\r\nimport ProjectList from '../../component/ProjectList/ProjectList';\r\n\r\n/** Image */\r\nimport {SvgPlay} from '@lib/ui/Icons/SvgPlay';\r\n\r\n/** Graphql schema */\r\nimport ProjectListQuery from './ProjectListQuery.graphql';\r\n\r\n/** Redux reducers*/\r\nimport {getUserFromStore} from '../../../../store/reducers/user/selectors';\r\n\r\nconst has = Object.prototype.hasOwnProperty;\r\n\r\n\r\n\r\n\r\n\r\nexport class ProjectListPage extends Component {\r\n  static propTypes = {...ReactRoutePropTypes};\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <ErrorCatch>\r\n        <Flex mt={9} justifyContent={'center'}>\r\n          <Container maxWidth={'500px'} width={'100%'}>\r\n            <PaginationPageHOC\r\n              queryName={'projectList'}\r\n              pageSize={5}\r\n              pageNumber={1}\r\n              queryVariables={{\r\n                id: user && user.id\r\n              }}\r\n              query={ProjectListQuery}\r\n            >\r\n              {(props) => (\r\n                <PaginationPage\r\n                  {...props}\r\n                  data={props.data && props.data.projectList}\r\n                  Consumer={ProjectList}\r\n                />\r\n              )}\r\n            </PaginationPageHOC>\r\n\r\n            <Link mr={6} to={`/app/project-create`} textDecoration={'none'}>\r\n              <ButtonWithImage\r\n                type=\"submit\"\r\n                variant={'large'}\r\n                size={'medium'}\r\n                children={'Создать проект'}\r\n                rightIcon={<SvgPlay/>}\r\n                ml={9}\r\n                width={'100%'}\r\n                widthIcon={'10px'}\r\n              />\r\n            </Link>\r\n\r\n\r\n          </Container>\r\n        </Flex>\r\n      </ErrorCatch>\r\n    );\r\n  }\r\n}\r\n\r\nProjectListPage = connect(state => ({\r\n  user: getUserFromStore(state),\r\n}))(ProjectListPage);\r\nexport default ProjectListPage;\r\n"]}