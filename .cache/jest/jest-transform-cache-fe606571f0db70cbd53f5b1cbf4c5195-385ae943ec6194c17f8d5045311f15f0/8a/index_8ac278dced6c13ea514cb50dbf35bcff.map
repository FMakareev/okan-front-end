{"version":3,"sources":["index.js"],"names":["LeftColumn","Flex","RightColumn","ProfilePage","props","user","role","id","ROLE_USER","ROLE_ADMIN","DocumentsForApprovalQuery","data","documentsForApproval","ProfileApproval","UserItemQuery","loading","error","console","useritem","Object","assign","NotificationListQuery","notificationsList","ProfileNotification","Component","ReactRoutePropTypes","mb","PropTypes","string"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport { Query } from 'react-apollo';\r\n\r\n/**View*/\r\nimport SmallPreloader from '@lib/ui/SmallPreloader/SmallPreloader';\r\nimport ErrorCatch from '@lib/ui/ErrorCatch/ErrorCatch';\r\nimport Flex from '@lib/ui/Flex/Flex';\r\nimport { CheckComponentAccessByRole } from '@lib/ui/CheckComponentAccessByRole/CheckComponentAccessByRole';\r\nimport PaginationPageHOC from '@lib/ui/PaginationPageHOC/PaginationPageHOC';\r\nimport PaginationPage from '@lib/ui/PaginationPage/PaginationPage';\r\n\r\n/**Components Admin*/\r\nimport ProfileApproval from '../../component/ProfileApproval/ProfileApproval';\r\nimport FormProfileCreateUser from '../../component/FormProfileCreateUser/FormProfileCreateUser';\r\nimport ProfileNotification from '../../component/ProfileNotification/ProfileNotification';\r\nimport FormProfileRecoveryEmail from '../../component/FormProfileRecoveryEmail/FormProfileRecoveryEmail';\r\n\r\n/** Components User*/\r\nimport FormPersonData from '../../component/FormPersonData/FormPersonData';\r\nimport FormChangePassword from '../../component/FormChangePassword/FormChangePassword';\r\n\r\n/**PropTypes*/\r\nimport { ReactRoutePropTypes } from '../../../../propTypes/ReactRoutePropTypes';\r\n\r\n/** Constants */\r\nimport { ROLE_ADMIN, ROLE_USER } from '../../../../shared/roles';\r\n\r\n/** Graphql schema */\r\nimport UserItemQuery from './UserItemQuery.graphql';\r\nimport NotificationListQuery from './NotificationListQuery.graphql';\r\nimport DocumentsForApprovalQuery from './DocumentsForApprovalQuery.graphql';\r\n\r\n/** HOCS */\r\nimport { captureException } from '../../../../hocs/withSentry/withSentry';\r\n\r\nconst LeftColumn = styled(Flex)`\r\n  width: calc(100% - 400px);\r\n\r\n  @media (min-width: 1200px) {\r\n    width: calc(100% - 480px);\r\n  }\r\n`;\r\n\r\nconst RightColumn = styled(Flex)`\r\n  width: 360px;\r\n\r\n  @media (min-width: 1200px) {\r\n    width: 400px;\r\n  }\r\n`;\r\n\r\nexport class ProfilePage extends Component {\r\n  static propTypes = { ...ReactRoutePropTypes, mb: PropTypes.string };\r\n\r\n  render() {\r\n    const {\r\n      user: { role, id },\r\n    } = this.props;\r\n\r\n    return (\r\n      <ErrorCatch>\r\n        <Flex ml={'10%'} mr={'70px'} mt={9} mb={12} flexDirection={'column'}>\r\n          <Flex justifyContent={'space-between'} mb={'100px'}>\r\n            <LeftColumn flexDirection={'column'}>\r\n              <CheckComponentAccessByRole targetRole={[ROLE_USER, ROLE_ADMIN]} userRole={role}>\r\n                <PaginationPageHOC\r\n                  queryName={'documentsForApproval'}\r\n                  queryVariables={{\r\n                    user: id,\r\n                  }}\r\n                  pageSize={5}\r\n                  pageNumber={1}\r\n                  query={DocumentsForApprovalQuery}>\r\n                  {props => (\r\n                    <PaginationPage\r\n                      {...props}\r\n                      data={props.data && props.data.documentsForApproval}\r\n                      Consumer={ProfileApproval}\r\n                    />\r\n                  )}\r\n                </PaginationPageHOC>\r\n              </CheckComponentAccessByRole>\r\n            </LeftColumn>\r\n\r\n            <RightColumn flexDirection={'column'}>\r\n              <CheckComponentAccessByRole targetRole={[ROLE_ADMIN]} userRole={role && role}>\r\n                <FormProfileCreateUser />\r\n              </CheckComponentAccessByRole>\r\n\r\n              <CheckComponentAccessByRole targetRole={[ROLE_USER]} userRole={role && role}>\r\n                <Query query={UserItemQuery} variables={{ ...(id ? { id } : null) }}>\r\n                  {({ loading, error, data }) => {\r\n                    if (id && loading) {\r\n                      return <SmallPreloader />;\r\n                    }\r\n                    if (error) {\r\n                      console.error(`Error UserItemQuery: `, error);\r\n                      captureException(error, `Error UserItemQuery: `);\r\n                      return null;\r\n                    }\r\n                    if (id && data && !data.useritem) {\r\n                      return null;\r\n                    }\r\n                    return (\r\n                      <FormPersonData\r\n                        initialValues={data && Object.assign({}, { ...data.useritem })}\r\n                      />\r\n                    );\r\n                  }}\r\n                </Query>\r\n              </CheckComponentAccessByRole>\r\n            </RightColumn>\r\n          </Flex>\r\n\r\n          <Flex justifyContent={'space-between'}>\r\n            <LeftColumn flexDirection={'column'}>\r\n              <CheckComponentAccessByRole\r\n                targetRole={[ROLE_USER, ROLE_ADMIN]}\r\n                userRole={role && role}>\r\n                <PaginationPageHOC\r\n                  queryName={'notificationsList'}\r\n                  queryVariables={{}}\r\n                  pageSize={5}\r\n                  pageNumber={1}\r\n                  query={NotificationListQuery}>\r\n                  {props => (\r\n                    <PaginationPage\r\n                      {...props}\r\n                      data={props.data && props.data.notificationsList}\r\n                      Consumer={ProfileNotification}\r\n                    />\r\n                  )}\r\n                </PaginationPageHOC>\r\n              </CheckComponentAccessByRole>\r\n            </LeftColumn>\r\n\r\n            <RightColumn flexDirection={'column'}>\r\n              <CheckComponentAccessByRole targetRole={[ROLE_ADMIN]} userRole={role && role}>\r\n                <FormProfileRecoveryEmail />\r\n              </CheckComponentAccessByRole>\r\n\r\n              <CheckComponentAccessByRole targetRole={[ROLE_USER]} userRole={role && role}>\r\n                <FormChangePassword />\r\n              </CheckComponentAccessByRole>\r\n            </RightColumn>\r\n          </Flex>\r\n        </Flex>\r\n      </ErrorCatch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfilePage;\r\n"]}