{"version":3,"sources":["actions.js"],"names":["userInit","state","request","dispatch","client","isBrowser","Promise","resolve","reject","user","initLoading","isAuth","type","USER_INIT_LOADING_START","query","CurrentUserItemQuery","then","response","console","log","data","localStorage","setItem","JSON","stringify","currentuseritem","USER_INIT_LOADING_SUCCESS","error","clear","USER_INIT_LOADING_ERROR","USER_NOT_AUTHORIZED","userUpdate","browserClient","serverClient","USER_UPDATE_LOADING_START","loading","USER_UPDATE_LOADING_SUCCESS","USER_UPDATE_LOADING_ERROR","userRemove","USER_REMOVE"],"mappings":"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","sourcesContent":["/* global isBrowser */\r\n\r\nimport {\r\n  USER_INIT_LOADING_ERROR,\r\n  USER_INIT_LOADING_START,\r\n  USER_INIT_LOADING_SUCCESS,\r\n  USER_NOT_AUTHORIZED,\r\n  USER_REMOVE,\r\n  USER_UPDATE_LOADING_ERROR,\r\n  USER_UPDATE_LOADING_START,\r\n  USER_UPDATE_LOADING_SUCCESS,\r\n} from './actionTypes';\r\nimport { client as browserClient } from '../../../apollo/index.client';\r\nimport { client as serverClient } from '../../../apollo/index.server';\r\nimport CurrentUserItemQuery from './CurrentUserItemQuery.graphql';\r\nimport { resetUserToken } from './resetUserToken';\r\n\r\n/**\r\n * @desc метод инициализации пользователя в системе\r\n * */\r\nexport const userInit = (state, request) => dispatch => {\r\n  let client = null;\r\n  if (isBrowser) {\r\n    client = browserClient();\r\n  } else {\r\n    client = serverClient(request);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (!state.user.initLoading && !state.user.isAuth) {\r\n        dispatch({\r\n          type: USER_INIT_LOADING_START,\r\n        });\r\n        client\r\n          .query({ query: CurrentUserItemQuery })\r\n          .then(response => {\r\n            console.log('response:', response);\r\n            const { data } = response;\r\n            if (isBrowser) {\r\n              localStorage.setItem('user', JSON.stringify(data.currentuseritem));\r\n            }\r\n            dispatch({ type: USER_INIT_LOADING_SUCCESS, user: { ...data.currentuseritem } });\r\n            resolve(data.currentuseritem);\r\n          })\r\n          .catch(error => {\r\n            if (isBrowser) {\r\n              localStorage.clear();\r\n            }\r\n            console.error('Error userInit: ', error);\r\n            /** */\r\n            dispatch({\r\n              type: USER_INIT_LOADING_ERROR,\r\n              user: {\r\n                error: USER_NOT_AUTHORIZED,\r\n              },\r\n            });\r\n            resolve(error);\r\n          });\r\n      } else {\r\n        resolve(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error userInit: ', error);\r\n      dispatch({\r\n        type: USER_INIT_LOADING_ERROR,\r\n        user: {\r\n          error: USER_NOT_AUTHORIZED,\r\n        },\r\n      });\r\n      resolve(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const userUpdate = () => dispatch => {\r\n  let client = null;\r\n  if (isBrowser) {\r\n    client = browserClient;\r\n  } else {\r\n    client = serverClient;\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_LOADING_START,\r\n        user: {\r\n          loading: true,\r\n        },\r\n      });\r\n\r\n      client()\r\n        .query({ query: CurrentUserItemQuery })\r\n        .then(response => {\r\n          const { data } = response;\r\n          if (isBrowser) {\r\n            localStorage.setItem('user', JSON.stringify(data.currentuseritem));\r\n          }\r\n          dispatch({ type: USER_UPDATE_LOADING_SUCCESS, user: { ...data.currentuseritem } });\r\n          resolve(data.currentuseritem);\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          if (isBrowser) {\r\n            localStorage.clear();\r\n          }\r\n          dispatch({ type: USER_UPDATE_LOADING_ERROR, user: { error: error } });\r\n          reject(error);\r\n        });\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport const userRemove = () => dispatch => {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      if (isBrowser) {\r\n        // window.localStorage.clear();\r\n        // const cookies = document.cookie.split(';');\r\n\r\n        // for (let i = 0; i < cookies.length; i += 1) {\r\n        //   const cookie = cookies[i];\r\n        //   const eqPos = cookie.indexOf('=');\r\n        //   const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n        //   document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT`;\r\n        // }\r\n\r\n        resetUserToken();\r\n\r\n        dispatch(USER_REMOVE);\r\n        resolve(true);\r\n      }\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n};\r\n\r\nexport default {\r\n  userInit,\r\n  userUpdate,\r\n  userRemove,\r\n};\r\n"]}