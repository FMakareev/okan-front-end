{"version":3,"sources":["index.js"],"names":["CreateStore","createStoreMiddleware","thunkMiddleware","createStore","initialState","isBrowser","window","PRELOADED_REDUX_STATE","Store","rootReducer","dispatch","getState"],"mappings":";;;;;;;;;AACA;;AACA;;AAEA;;AACA;;AACA;;AANA;AAUA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExB,MAAMC,qBAAqB,GAAG,4BAAgBC,sBAAhB,EAAiCC,kBAAjC,CAA9B;AACA,MAAMC,YAAY,GAAGC,SAAS,GAAGC,MAAM,CAACC,qBAAV,GAAkC,EAAhE;AAEA,MAAMC,KAAK,GAAGP,qBAAqB,CAACQ,kBAAD,EAAcL,YAAd,EAA4B,kDAA5B,CAAnC;;AAEA,MAAIC,SAAJ,EAAe;AACbG,IAAAA,KAAK,CAACE,QAAN,CAAe,uBAASF,KAAK,CAACG,QAAN,EAAT,CAAf;AACD;;AACD,SAAOH,KAAP;AACD,CAXD;;;eAgBeR,W","sourcesContent":["/* global isBrowser */\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { rootReducer } from './reducers/index';\r\nimport { userInit } from './reducers/user/actions';\r\n\r\n\r\n\r\nconst CreateStore = () => {\r\n\r\n  const createStoreMiddleware = applyMiddleware(thunkMiddleware)(createStore);\r\n  const initialState = isBrowser ? window.PRELOADED_REDUX_STATE : {};\r\n\r\n  const Store = createStoreMiddleware(rootReducer, initialState, composeWithDevTools())\r\n\r\n  if (isBrowser) {\r\n    Store.dispatch(userInit(Store.getState()));\r\n  }\r\n  return Store;\r\n};\r\n\r\n\r\nexport { CreateStore };\r\n\r\nexport default CreateStore;\r\n"]}