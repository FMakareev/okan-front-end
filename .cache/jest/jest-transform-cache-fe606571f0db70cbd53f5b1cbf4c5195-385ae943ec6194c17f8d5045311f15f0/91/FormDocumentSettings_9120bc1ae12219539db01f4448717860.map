{"version":3,"sources":["FormDocumentSettings.js"],"names":["notificationOpts","success","title","position","autoDismiss","error","message","FormDocumentSettings","initialState","setState","state","isLoading","value","variables","approvaldate","userid","user","id","role","name","props","client","mutate","mutation","CreateContractorApprovalMutation","DeleteContractorMutation","fetchPolicy","nextContractors","prevContractors","differenceBetweenThePreviousAndTheNext","forEach","prevContractor","result","find","nextContractor","push","map","item","removeContractorApprovalMutation","deleteContractorApproval","data","newDate","externalAndInternalApprove","externalMatching","promiseLists","has","call","Array","isArray","getDeletedContractor","initialValues","createRequestListForRemoveContractorApproval","length","Promise","all","UpdateContractorApprovalMutation","contractorapproval","submitUpdateContractorApproval","updatecontractorapproval","submitCreateContractorApproval","createcontractorapproval","createContractorApprovalList","setNotificationError","setNotificationSuccess","history","loadingToggle","removeContractorApproval","SubmissionError","_error","transformDocumentApproval","documentApproval","options","Object","assign","update","store","response","updatedocument","documentItemOptions","query","DocumentItemQuery","document","documentItem","readQuery","documentitem","writeQuery","e","then","project","handleSubmit","updateDocument","BasicDocumentSettings","Component","ReactRoutePropTypes","UpdateDocumentMutation","values","dispatch","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { graphql, withApollo } from 'react-apollo';\r\nimport { success, error } from 'react-notification-system-redux';\r\nimport { Fields, reduxForm, SubmissionError, Form, getFormValues, FieldArray } from 'redux-form';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { has } from '../../../../utils/has';\r\n/**PropTypes */\r\nimport { ReactRoutePropTypes } from '../../../../propTypes/ReactRoutePropTypes';\r\n\r\n/** View */\r\nimport Box from '@lib/ui/Box/Box';\r\nimport Flex from '@lib/ui/Flex/Flex';\r\nimport Text from '@lib/ui/Text/Text';\r\nimport Container from '@lib/ui/Container/Container';\r\nimport ButtonWithImage from '@lib/ui/ButtonWithImage/ButtonWithImage';\r\n\r\n/** Components */\r\nimport BasicDocumentSettings from '../BasicDocumentSettings/BasicDocumentSettings';\r\nimport FieldArrayInternalUserWithTitle from './FieldArrayInternalUserWithTitle';\r\n\r\n/** Image */\r\nimport { SvgSave } from '@lib/ui/Icons/SvgSave';\r\n\r\n/** Graphql schema */\r\nimport UpdateDocumentMutation from '../../graphql/UpdateDocumentMutation.graphql';\r\nimport DocumentItemQuery from '../../graphql/DocumentItemQuery.graphql';\r\nimport CreateContractorApprovalMutation from '../../graphql/CreateContractorApprovalMutation.graphql';\r\nimport UpdateContractorApprovalMutation from '../../graphql/UpdateContractorApprovalMutation.graphql';\r\nimport DeleteContractorMutation from '../../graphql/DeleteContractorMutation.graphql';\r\nimport { captureException } from '../../../../hocs/withSentry/withSentry';\r\n\r\nconst notificationOpts = () => ({\r\n  success: {\r\n    title: 'Настройки проекта успешно обновлены',\r\n    position: 'tr',\r\n    autoDismiss: 2,\r\n  },\r\n  error: {\r\n    title: 'Настройки проекта не обновлены',\r\n    message:\r\n      'Во время обновления настроек возникла ошибка, попробуйте перезагрузит страницу если это не поможет обратитесь в поддержку.',\r\n    position: 'tr',\r\n    autoDismiss: 5,\r\n  },\r\n});\r\n\r\nexport class FormDocumentSettings extends Component {\r\n  static propTypes = { ...ReactRoutePropTypes };\r\n\r\n  state = this.initialState;\r\n\r\n  get initialState() {\r\n    return { isLoading: false };\r\n  }\r\n\r\n  /**\r\n   * @desc метод для изменения статуса прелоатера\r\n   * */\r\n  loadingToggle = () => {\r\n    this.setState(state => ({\r\n      isLoading: !state.isLoading,\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * @param {object} value\r\n   * @param {object} value.approvaldate\r\n   * @param {string} value.user.firstname\r\n   * @param {string} value.user.lastname\r\n   * @param {string} value.user.patronymic\r\n   * @param {string} value.user.organizationname\r\n   * @param {string} value.user.position\r\n   * @param {string} value.user.approvaldate\r\n   * @param {string} value.user.signature\r\n   * @param {string} value.user.role\r\n   * @param {string} value.user.role.name\r\n   * @return {Promise}\r\n   * @desc\r\n   * */\r\n  submitCreateContractorApproval = value => {\r\n    const variables = {\r\n      approvaldate: value.approvaldate,\r\n      userid: value.user.id,\r\n      ...value.user,\r\n      role: value.user.role.name,\r\n    };\r\n    return this.props.client.mutate({\r\n      mutation: CreateContractorApprovalMutation,\r\n      variables,\r\n    });\r\n  };\r\n\r\n  removeContractorApprovalMutation = id => {\r\n    const { client } = this.props;\r\n    return client\r\n      .mutate({\r\n        mutation: DeleteContractorMutation,\r\n        fetchPolicy: 'no-cache',\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .catch(error => {\r\n        captureException(error, 'Error removeContractorApprovalMutation: ');\r\n        return error;\r\n      });\r\n  };\r\n\r\n  /**\r\n   * @param {array} nextContractors - новый список контракторов\r\n   * @param {array} prevContractors - значения\r\n   * @return {array}\r\n   * @desc метод получает на вход новый список и старый, сравнивает их и выдает разницу между новым списком и старым\r\n   * */\r\n  getDeletedContractor = (nextContractors, prevContractors) => {\r\n    try {\r\n      let differenceBetweenThePreviousAndTheNext = [];\r\n\r\n      prevContractors.forEach(prevContractor => {\r\n        let result = nextContractors.find(\r\n          nextContractor => prevContractor.id === nextContractor.id,\r\n        );\r\n        if (!result) {\r\n          differenceBetweenThePreviousAndTheNext.push(prevContractor);\r\n        }\r\n      });\r\n      return differenceBetweenThePreviousAndTheNext;\r\n    } catch (error) {\r\n      captureException(error, 'Error transformDocumentApproval: ');\r\n      return error;\r\n    }\r\n  };\r\n\r\n  createRequestListForRemoveContractorApproval = async value => {\r\n    try {\r\n      return await value.map(async item => {\r\n        const {\r\n          data: { deleteContractorApproval },\r\n        } = await this.removeContractorApprovalMutation(item.id);\r\n\r\n        return deleteContractorApproval;\r\n      });\r\n    } catch (error) {\r\n      captureException(error, 'Error createContractorApprovalList: ');\r\n    }\r\n  };\r\n\r\n  removeContractorApproval = async value => {\r\n    try {\r\n      const newDate = {\r\n        externalAndInternalApprove: [],\r\n        externalMatching: [],\r\n      };\r\n      const promiseLists = {\r\n        externalAndInternalApprove: [],\r\n        externalMatching: [],\r\n      };\r\n\r\n      if (\r\n        has.call(value, 'externalAndInternalApprove') &&\r\n        Array.isArray(value.externalAndInternalApprove)\r\n      ) {\r\n        newDate.externalAndInternalApprove = this.getDeletedContractor(\r\n          value.externalAndInternalApprove,\r\n          this.props.initialValues.externalAndInternalApprove,\r\n        );\r\n        promiseLists.externalAndInternalApprove = await this.createRequestListForRemoveContractorApproval(\r\n          newDate.externalAndInternalApprove,\r\n        );\r\n      }\r\n      if (has.call(value, 'externalMatching') && Array.isArray(value.externalMatching)) {\r\n        newDate.externalMatching = this.getDeletedContractor(\r\n          value.externalMatching,\r\n          this.props.initialValues.externalMatching,\r\n        );\r\n        promiseLists.externalMatching = await this.createRequestListForRemoveContractorApproval(\r\n          newDate.externalMatching,\r\n        );\r\n      }\r\n\r\n      /** резолвим промисы */\r\n      if (promiseLists.externalAndInternalApprove.length) {\r\n        newDate.externalAndInternalApprove = await Promise.all(\r\n          promiseLists.externalAndInternalApprove,\r\n        );\r\n      }\r\n      if (promiseLists.externalMatching.length) {\r\n        newDate.externalMatching = await Promise.all(promiseLists.externalMatching);\r\n      }\r\n      return newDate;\r\n    } catch (error) {\r\n      captureException(error, 'Error removeContractorApproval: ');\r\n      return error;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {object} value\r\n   * @param {object} value.id\r\n   * @param {object} value.approvaldate\r\n   * @param {string} value.user.id\r\n   * @param {string} value.user.firstname\r\n   * @param {string} value.user.lastname\r\n   * @param {string} value.user.patronymic\r\n   * @param {string} value.user.organizationname\r\n   * @param {string} value.user.position\r\n   * @param {string} value.user.approvaldate\r\n   * @param {string} value.user.signature\r\n   * @param {string} value.user.role\r\n   * @param {string} value.user.role.name\r\n   * @return {Promise}\r\n   * @desc\r\n   * */\r\n  submitUpdateContractorApproval = value => {\r\n    const variables = {\r\n      ...value.user,\r\n      id: value.id,\r\n      approvaldate: value.approvaldate,\r\n      userid: value.user.id,\r\n    };\r\n    // TODO: заменить заглушку на мутацию\r\n    return this.props.client.mutate({\r\n      mutation: UpdateContractorApprovalMutation,\r\n      variables,\r\n    });\r\n  };\r\n\r\n  /**\r\n   * @param {array} value\r\n   * @param {object} value[i].user\r\n   * @param {string} value[i].approvaldate\r\n   * @return {Promise}\r\n   * @desc метод для преобразования данных из формы к типу ContractorApproval\r\n   * */\r\n  createContractorApprovalList = async value => {\r\n    try {\r\n      return await value.map(async item => {\r\n        let contractorapproval = {};\r\n\r\n        /** создаем/обновляем объект ContractorApproval */\r\n        if (has.call(item, 'id')) {\r\n          const {\r\n            data: { updatecontractorapproval },\r\n          } = await this.submitUpdateContractorApproval(item);\r\n          contractorapproval = updatecontractorapproval.contractorapproval;\r\n        } else {\r\n          const {\r\n            data: { createcontractorapproval },\r\n          } = await this.submitCreateContractorApproval(item);\r\n          contractorapproval = createcontractorapproval.contractorapproval;\r\n        }\r\n\r\n        return contractorapproval.id;\r\n      });\r\n    } catch (error) {\r\n      captureException(error, 'Error createContractorApprovalList: ');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {object} value\r\n   * @param {array} value.externalAndInternalApprove\r\n   * @param {array} value.externalMatching\r\n   * @return {Promise}\r\n   * @desc метод для преобразования данные формы к виду массивов gql типов ContractorApproval\r\n   * */\r\n  transformDocumentApproval = async value => {\r\n    try {\r\n      const newDate = {\r\n        externalAndInternalApprove: [],\r\n        externalMatching: [],\r\n      };\r\n      if (\r\n        has.call(value, 'externalAndInternalApprove') &&\r\n        Array.isArray(value.externalAndInternalApprove)\r\n      ) {\r\n        newDate.externalAndInternalApprove = await this.createContractorApprovalList(\r\n          value.externalAndInternalApprove,\r\n        );\r\n      }\r\n      if (has.call(value, 'externalMatching') && Array.isArray(value.externalMatching)) {\r\n        newDate.externalMatching = await this.createContractorApprovalList(value.externalMatching);\r\n      }\r\n\r\n      /** резолвим промисы */\r\n      if (newDate.externalAndInternalApprove.length) {\r\n        newDate.externalAndInternalApprove = await Promise.all(newDate.externalAndInternalApprove);\r\n      }\r\n      if (newDate.externalMatching.length) {\r\n        newDate.externalMatching = await Promise.all(newDate.externalMatching);\r\n      }\r\n\r\n      return newDate;\r\n    } catch (error) {\r\n      captureException(error, 'Error transformDocumentApproval: ');\r\n\r\n      return error;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @param {object} value\r\n   * @param {array} value.externalAndInternalApprove\r\n   * @param {array} value.externalMatching\r\n   * @param {array} value.partners\r\n   * @param {string} value.name\r\n   * @param {string} value.customercode\r\n   * @param {string} value.okancode\r\n   * @param {string} value.okancode\r\n   * @return {Promise}\r\n   * @desc обновляем документ, тут собрано несколько последовательно выполняющийся методов\r\n   * */\r\n  updateDocument = async value => {\r\n    const { setNotificationError, setNotificationSuccess, history } = this.props;\r\n    this.loadingToggle();\r\n    const removeContractorApproval = await this.removeContractorApproval(value);\r\n    if (removeContractorApproval.message) {\r\n      setNotificationError(notificationOpts().error);\r\n      throw new SubmissionError({ _error: removeContractorApproval.message });\r\n    }\r\n\r\n    const documentApproval = await this.transformDocumentApproval(value);\r\n\r\n    if (documentApproval.message) {\r\n      setNotificationError(notificationOpts().error);\r\n      throw new SubmissionError({ _error: documentApproval.message });\r\n    }\r\n\r\n    const options = {\r\n      variables: Object.assign({}, value, documentApproval),\r\n      update: (store, response) => {\r\n        try {\r\n          const {\r\n            data: { updatedocument },\r\n          } = response;\r\n          const documentItemOptions = {\r\n            query: DocumentItemQuery,\r\n            variables: {\r\n              id: updatedocument.document.id,\r\n            },\r\n          };\r\n\r\n          const documentItem = store.readQuery(documentItemOptions);\r\n\r\n          documentItem.documentitem = updatedocument.document;\r\n\r\n          store.writeQuery({ ...documentItemOptions, data: documentItem });\r\n        } catch (e) {\r\n          captureException(e, 'Error in FormProjectCreate, method updateDocument : ');\r\n        }\r\n      },\r\n    };\r\n\r\n    return this.props['@apollo/update'](options)\r\n      .then(response => {\r\n        this.loadingToggle();\r\n        setNotificationSuccess(notificationOpts().success);\r\n        history.push(`/app/project/${options.variables.project}`);\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        const { message } = error;\r\n        this.loadingToggle();\r\n        setNotificationError(notificationOpts().error);\r\n        captureException(error);\r\n\r\n        throw new SubmissionError({ _error: message });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <Form onSubmit={handleSubmit(this.updateDocument)}>\r\n        <Flex mt={9} mb={'100px'} justifyContent={'space-around'}>\r\n          <Box px={5} width={'50%'}>\r\n            <Container mb={9} maxWidth={'500px'} width={'100%'}>\r\n              <Fields\r\n                names={['name', 'customercode', 'okancode', 'equipmentname']}\r\n                component={BasicDocumentSettings}\r\n              />\r\n            </Container>\r\n\r\n            <FieldArrayInternalUserWithTitle name={'internalMatching'} title={'Внутренние согласующие ОКАН'} />\r\n          </Box>\r\n          \r\n          <Box px={5} width={'50%'}>\r\n            <FieldArrayInternalUserWithTitle\r\n              name={'externalAndInternalApprove'}\r\n              title={'Утверждающие внешние и внутренние'}\r\n            />\r\n\r\n            <FieldArrayInternalUserWithTitle name={'externalMatching'} title={'Внешние согласующие'} />\r\n          </Box>\r\n        </Flex>\r\n\r\n        <Flex justifyContent={'center'} mb={'200px'}>\r\n          <ButtonWithImage\r\n            isLoading={this.state.isLoading}\r\n            type={'submit'}\r\n            variant={'large'}\r\n            size={'medium'}\r\n            children={'Сохранить настройки'}\r\n            leftIcon={SvgSave()}\r\n            mr={9}\r\n            width={'500px'}\r\n            widthIcon={'16px'}\r\n          />\r\n        </Flex>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFormDocumentSettings = graphql(UpdateDocumentMutation, {\r\n  name: '@apollo/update',\r\n})(FormDocumentSettings);\r\n\r\nFormDocumentSettings = connect(\r\n  state => ({\r\n    values: getFormValues('FormDocumentSettings')(state),\r\n  }),\r\n  dispatch => ({\r\n    setNotificationSuccess: message => dispatch(success(message)),\r\n    setNotificationError: message => dispatch(error(message)),\r\n  }),\r\n)(FormDocumentSettings);\r\n\r\nFormDocumentSettings = reduxForm({\r\n  form: 'FormDocumentSettings',\r\n})(FormDocumentSettings);\r\nFormDocumentSettings = withRouter(FormDocumentSettings);\r\nFormDocumentSettings = withApollo(FormDocumentSettings);\r\nexport default FormDocumentSettings;\r\n"]}