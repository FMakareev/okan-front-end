{"version":3,"sources":["withPreLoader.js"],"names":["withPreLoader","Component","isLoading","state","setState","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAAAC,SAAS,EAAI;AAAA;;AAE9C;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,kGACU;AACNC,UAAAA,SAAS,EAAE;AADL,SADV;AAAA;AAAA;;AAAA;AAAA;AAAA,iCAKW;AAAA;;AACP,iBAAQ,gCAAC,SAAD;AAAW,YAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SAAjC;AAA4C,YAAA,eAAe,EAAE,2BAAM;AACzE,cAAA,MAAI,CAACE,QAAL,CAAc,UAAAD,KAAK;AAAA,uBAAK;AACtBD,kBAAAA,SAAS,EAAE,CAACC,KAAK,CAACD;AADI,iBAAL;AAAA,eAAnB;AAGD;AAJO,aAID,KAAKG,KAJJ,EAAR;AAKD;AAXH;AAAA;AAAA,MAA+BJ,SAA/B;AAcD,GAhB4B;AAAA,CAAtB;;;eAkBQD,a","sourcesContent":["import React, {Component} from 'react';\r\n\r\nexport const withPreLoader = () => Component => {\r\n\r\n  return class PreLoader extends Component {\r\n    state = {\r\n      isLoading: false,\r\n    };\r\n\r\n    render() {\r\n      return (<Component isLoading={this.state.isLoading} preLoaderToggle={() => {\r\n        this.setState(state => ({\r\n          isLoading: !state.isLoading,\r\n        }))\r\n      }} {...this.props}/>)\r\n    }\r\n  }\r\n\r\n};\r\n\r\nexport default withPreLoader\r\n"]}