{"version":3,"sources":["TextFieldArray.js"],"names":["FlexStyled","Flex","NewSelectStyles","SelectStyles","control","style","props","width","padding","border","borderRadius","cursor","boxShadow","isFocused","menuIsOpen","menu","margin","ControlComponent","TextFieldArray","value","input","onChange","compareOptions","error","console","valueKey","options1","options2","Array","isArray","filter","item","result","find","child","options","id","name","log","state","initialState","nextProps","setState","selectedOption","optionItem","valueItem","map","index","onDelete","getOptionName","Control","length","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Box } from 'grid-styled';\r\nimport { components } from 'react-select';\r\n\r\n/** Image */\r\n\r\nimport { SvgAdd } from '../Icons/SvgAdd';\r\nimport { SvgDelete } from '../Icons/SvgDelete';\r\n\r\n/** view */\r\nimport ButtonBase from '../ButtonBase/ButtonBase';\r\nimport Text from '../Text/Text';\r\nimport Flex from '../Flex/Flex';\r\nimport { SelectBase, SelectStyles } from '@lib/ui/SelectBase/SelectBase';\r\nimport DeepEqual from 'fast-deep-equal';\r\n\r\nconst FlexStyled = styled(Flex)`\r\n  border-top: 1px solid #00649c;\r\n  border-radius: 0px;\r\n`;\r\n\r\nconst NewSelectStyles = {\r\n  ...SelectStyles,\r\n  control: (style, props) => {\r\n    return {\r\n      ...style,\r\n      width: '100%',\r\n      padding: '0 0 0 10px',\r\n      border: 'none',\r\n      borderRadius: 0,\r\n      cursor: 'pointer',\r\n      ':hover': {\r\n        border: 'none',\r\n        boxShadow: 'none',\r\n      },\r\n      ...(props.isFocused\r\n        ? {\r\n            border: 'none',\r\n            boxShadow: 'none',\r\n          }\r\n        : {}),\r\n      ...(props.menuIsOpen\r\n        ? {\r\n            borderRadius: '0',\r\n            border: 'none',\r\n          }\r\n        : {}),\r\n    };\r\n  },\r\n  menu: style => {\r\n    return {\r\n      ...style,\r\n      margin: 0,\r\n      borderRadius: '5px',\r\n    };\r\n  },\r\n};\r\n\r\nconst ControlComponent = props => (\r\n  <FlexStyled py={2} alignItems={'center'} justifyContent={'space-between'} width={'100%'}>\r\n    <SvgAdd />\r\n    <components.Control {...props} />\r\n  </FlexStyled>\r\n);\r\n\r\n/**\r\n * Компонент инпута c доабвлением еще инпутов (Text Field Array)\r\n * @example ./TextFieldArray.example.md\r\n */\r\nexport class TextFieldArray extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    if (this.props.input.value.length) {\r\n      const { options, valueKey, input } = this.props;\r\n\r\n      return {\r\n        selectedOption:\r\n          options &&\r\n          options.filter(optionItem =>\r\n            input.value.find(valueItem => valueItem === optionItem[valueKey]),\r\n          ),\r\n      };\r\n    }\r\n    return { selectedOption: [] };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (\r\n      !DeepEqual(nextProps.options, this.props.options) ||\r\n      !DeepEqual(nextProps.input.value, this.props.input.value)\r\n    ) {\r\n      const { options, valueKey, input } = nextProps;\r\n      if (input.value && options) {\r\n        this.setState(() => ({\r\n          selectedOption:\r\n            options &&\r\n            options.filter(optionItem =>\r\n              input.value.find(valueItem => valueItem === optionItem[valueKey]),\r\n            ),\r\n        }));\r\n      }\r\n    }\r\n  }\r\n\r\n  onDelete = value => {\r\n    try {\r\n      const { input } = this.props;\r\n      input.onChange(this.compareOptions(input.value, [value]));\r\n    } catch (error) {\r\n      console.error('Error onDelete: ', error);\r\n    }\r\n  };\r\n\r\n  onChange = value => {\r\n    const { input, valueKey } = this.props;\r\n    input.onChange([...input.value, value[valueKey]]);\r\n  };\r\n\r\n  compareOptions = (options1 = [], options2 = [], valueKey) => {\r\n    try {\r\n      if (Array.isArray(options1) && Array.isArray(options2)) {\r\n        return options1.filter(item => {\r\n          let result = options2.find(child => {\r\n            if (valueKey && typeof valueKey === 'string') {\r\n              return item[valueKey] === child;\r\n            } else {\r\n              return item === child;\r\n            }\r\n          });\r\n          if (result) {\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n      return [];\r\n    } catch (error) {\r\n      console.error(error);\r\n      return [];\r\n    }\r\n  };\r\n\r\n  getOptionName = (options, id) => {\r\n    try {\r\n      let result = options && Array.isArray(options) && options.find(item => item.id === id);\r\n      if (result) {\r\n        return result.name;\r\n      } else {\r\n        return id;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return id;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      options,\r\n      input: { value },\r\n      valueKey,\r\n    } = this.props;\r\n\r\n    return (\r\n      <Box width={'100%'}>\r\n        {value &&\r\n          Array.isArray(value) &&\r\n          value.map((item, index) => (\r\n            <FlexStyled py={3} key={`FlexStyled-${index}`} width={'100%'} alignItems={'center'}>\r\n              <ButtonBase onClick={() => this.onDelete(item)} type={'button'} variant={'empty'}>\r\n                <SvgDelete />\r\n              </ButtonBase>\r\n              <Text\r\n                textAlign={'center'}\r\n                width={'100%'}\r\n                fontSize={6}\r\n                lineHeight={8}\r\n                fontFamily={'primary300'}\r\n                color={'color3'}>\r\n                {this.getOptionName(options, item)}\r\n              </Text>\r\n            </FlexStyled>\r\n          ))}\r\n\r\n        <SelectBase\r\n          placeholder={'Добавить нового согласующего'}\r\n          {...this.props}\r\n          onChange={this.onChange}\r\n          options={this.compareOptions(options, value, valueKey)}\r\n          styles={NewSelectStyles}\r\n          components={{ Control: ControlComponent }}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TextFieldArray;\r\n"]}