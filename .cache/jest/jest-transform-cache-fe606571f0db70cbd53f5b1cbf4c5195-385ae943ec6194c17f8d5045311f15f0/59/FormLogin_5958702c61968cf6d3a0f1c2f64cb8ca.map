{"version":3,"sources":["FormLogin.js"],"names":["validate","uname","ups","errors","undefined","length","notificationOpts","success","title","message","position","autoDismiss","error","FormLogin","props","email","client","history","setNotificationSuccess","setNotificationError","query","UserEmailItemQuery","variables","then","result","data","currentuseritem","setState","apolloError","isLoading","setUser","push","Promise","resolve","graphQLErrors","networkError","rest","submitting","addUser","localStorage","setItem","JSON","stringify","value","reject","setTimeout","getUser","state","initialState","submit","bind","preLoaderToggle","response","status","document","cookie","SubmissionError","_error","handleSubmit","pristine","TextFieldWithTooltip","FieldInputPassword","Component","PropTypes","func","object","any","bool","dispatch","user","type","USER_ADD","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { withApollo } from 'react-apollo';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Field, reduxForm, SubmissionError, Form } from 'redux-form';\r\nimport { success, error } from 'react-notification-system-redux';\r\nimport { captureException } from '../../../../hocs/withSentry/withSentry';\r\n\r\n/** View */\r\nimport Box from '@lib/ui/Box/Box';\r\nimport FormButtonSubmit from '@lib/ui/FormButtonSubmit/FormButtonSubmit';\r\nimport TextFieldWithTooltip from '@lib/ui/TextFieldWithTooltip/TextFieldWithTooltip';\r\nimport { TextFieldFirstWrapper } from '@lib/ui/TextFieldFirstWrapper/TextFieldFirstWrapper';\r\nimport { TextFieldLastWrapper } from '@lib/ui/TextFieldLastWrapper/TextFieldLastWrapper';\r\nimport { withPreLoader } from '@lib/ui/withPreLoader/withPreLoader';\r\n\r\n/**Components */\r\nimport FormLogo from '../FormLogo/FormLogo';\r\nimport FieldInputPassword from '../FieldInputPassword/FieldInputPassword';\r\nimport { FetchUserAuth } from '../FetchUserAuth/FetchUserAuth';\r\n\r\n/** constants */\r\nimport { USER_ADD } from '../../../../store/reducers/user/actionTypes';\r\n\r\n/** query */\r\nimport UserEmailItemQuery from './UserEmailItemQuery.graphql';\r\n\r\nconst validate = ({ uname, ups }) => {\r\n  const errors = {};\r\n\r\n  if (uname === undefined) {\r\n    errors.uname = 'Обязательно для заполнения';\r\n  }\r\n\r\n  if (ups === undefined) {\r\n    errors.ups = 'Обязательно для заполнения';\r\n  }\r\n\r\n  if (ups !== undefined && ups.length <= 8) {\r\n    errors.ups = 'Пароль должен состоять минимум из 8 символов ';\r\n  }\r\n\r\n  if (ups !== undefined && ups.length >= 30) {\r\n    errors.ups = 'Пароль должен состоять не больше 30 символов ';\r\n  }\r\n  return errors;\r\n};\r\n\r\nconst notificationOpts = () => ({\r\n  success: {\r\n    title: 'Вход выполнен',\r\n    message: 'Вход выполнен',\r\n    position: 'tr',\r\n    autoDismiss: 2,\r\n  },\r\n  error: {\r\n    title: 'Вход не выполнен',\r\n    message: 'Вход не выполнен',\r\n    position: 'tr',\r\n    autoDismiss: 2,\r\n  },\r\n});\r\n\r\nexport class FormLogin extends Component {\r\n  static propTypes = {\r\n    addUser: PropTypes.func,\r\n    client: PropTypes.object,\r\n    error: PropTypes.any,\r\n    handleSubmit: PropTypes.func,\r\n    history: PropTypes.object,\r\n    isLoading: PropTypes.bool,\r\n    preLoaderToggle: PropTypes.func,\r\n    pristine: PropTypes.any,\r\n    setNotificationError: PropTypes.func,\r\n    setNotificationSuccess: PropTypes.func,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = this.initialState;\r\n\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  get initialState() {\r\n    return { submitting: false, apolloError: null };\r\n  }\r\n\r\n  submit(value) {\r\n    this.props.preLoaderToggle();\r\n    this.setState(({ submitting }) => ({\r\n      submitting: !submitting,\r\n    }));\r\n\r\n    return FetchUserAuth(value)\r\n      .then(response => {\r\n        this.props.preLoaderToggle();\r\n        if (response.status >= 400 || !document.cookie) {\r\n          throw response;\r\n        } else {\r\n          return this.getUser(value.email);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        const { status } = error;\r\n        this.props.preLoaderToggle();\r\n        this.setState(() => ({ submitting: false, apolloError: null }));\r\n        captureException(error);\r\n\r\n        if (status === 401 || status === 403) {\r\n          throw new SubmissionError({ _error: 'Не верно введен логин или пароль' });\r\n        } else {\r\n          throw new SubmissionError({ _error: 'Пользователь не найден' });\r\n        }\r\n      });\r\n  }\r\n\r\n  getUser = email => {\r\n    const { client, history, setNotificationSuccess, setNotificationError } = this.props;\r\n    return client\r\n      .query({ query: UserEmailItemQuery, variables: { email: email } })\r\n      .then(result => {\r\n        if (result.errors || result.data.currentuseritem === null) {\r\n          // TO DO change this\r\n          throw result;\r\n        } else {\r\n          this.setState(() => ({ apolloError: null, isLoading: false }));\r\n          this.setUser(result);\r\n          setNotificationSuccess(notificationOpts().success);\r\n\r\n          history.push(`/app/profile`);\r\n          return Promise.resolve(result);\r\n        }\r\n      })\r\n      .catch(({ graphQLErrors, message, error, networkError, ...rest }) => {\r\n        setNotificationError(notificationOpts().error);\r\n        captureException(error);\r\n        this.setState(() => ({\r\n          submitting: false,\r\n          apolloError: 'Ошибка входа',\r\n          isLoading: false,\r\n        }));\r\n      });\r\n  };\r\n\r\n  setUser = props => {\r\n    const {\r\n      data: { currentuseritem },\r\n    } = props;\r\n\r\n    const { addUser } = this.props;\r\n\r\n    addUser(currentuseritem);\r\n\r\n    localStorage.setItem('user', JSON.stringify({ ...currentuseritem }));\r\n  };\r\n\r\n  mockSubmit = value => {\r\n    this.setState(({ submitting, isLoading }) => {\r\n      return { submitting: !submitting, isLoading: !isLoading };\r\n    });\r\n\r\n    return new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n        this.getUser(value.email);\r\n        resolve(true);\r\n      }, 2000);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit, pristine, isLoading, error } = this.props;\r\n    const { apolloError } = this.state;\r\n    return (\r\n      <Form onSubmit={handleSubmit(this.submit)}>\r\n        <FormLogo />\r\n\r\n        <Box mb={'100px'}>\r\n          <TextFieldFirstWrapper>\r\n            <Field\r\n              name=\"uname\"\r\n              component={TextFieldWithTooltip}\r\n              placeholder={'Логин'}\r\n              type=\"text\"\r\n              left={'45%'}\r\n              // validate={[required, isEmail]}\r\n            />\r\n          </TextFieldFirstWrapper>\r\n\r\n          <TextFieldLastWrapper>\r\n            <Field\r\n              name={'ups'}\r\n              placeholder={'Пароль'}\r\n              // TextFieldInput={TextFieldWithTooltip}\r\n              component={FieldInputPassword}\r\n            />\r\n          </TextFieldLastWrapper>\r\n        </Box>\r\n\r\n        <FormButtonSubmit\r\n          disabled={pristine}\r\n          children={'Войти'}\r\n          ml={9}\r\n          isLoading={isLoading}\r\n          error={error || apolloError}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFormLogin = withRouter(FormLogin);\r\n\r\nFormLogin = withApollo(FormLogin);\r\nFormLogin = withPreLoader()(FormLogin);\r\n\r\nFormLogin = connect(\r\n  null,\r\n  dispatch => ({\r\n    addUser: user => dispatch({ type: USER_ADD, user: user }),\r\n    setNotificationSuccess: message => dispatch(success(message)),\r\n    setNotificationError: message => dispatch(error(message)),\r\n  }),\r\n)(FormLogin);\r\n\r\nFormLogin = reduxForm({\r\n  form: 'FormLogin',\r\n})(FormLogin);\r\n\r\nexport default FormLogin;\r\n"]}