e86e637b2d72a54aa34a89b61de9f15c
"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.TextFieldBase = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _styledSystem = require("styled-system");

var _BorderRadiusProperty = _interopRequireDefault(require("../../styles/styleProperty/BorderRadiusProperty"));

var _BorderColorProperty = _interopRequireDefault(require("../../styles/styleProperty/BorderColorProperty"));

var _FontSizeProperty = _interopRequireDefault(require("../../styles/styleProperty/FontSizeProperty"));

var _LineHeightProperty = _interopRequireDefault(require("../../styles/styleProperty/LineHeightProperty"));

var _FontFamilyProperty = _interopRequireDefault(require("../../styles/FontFamilyProperty"));

var _BackgroundColorProperty = _interopRequireDefault(require("../../styles/styleProperty/BackgroundColorProperty"));

/** Style property */
var inputSize = (0, _styledSystem.variant)({
  key: 'variant.inputSize',
  prop: 'size'
});
var inputVariant = (0, _styledSystem.variant)({
  key: 'variant.inputVariant',
  prop: 'variant'
});
/**
 * Text Field Base
 * @example ./TextFieldBase.example.md
 */

var TextFieldBase =
/*#__PURE__*/
_styledComponents["default"].input.withConfig({
  componentId: "wsrc07-0"
})(["", ";", ";width:100%;border:1px solid;", ";", ";", ";-webkit-box-sizing:border-box;box-sizing:border-box;", ";", ";", ";", ";", ";", ";", ";::placeholder{", "}::-webkit-input-placeholder{", "}:-ms-input-placeholder{", "}::-ms-input-placeholder{", "}:focus::placeholder{color:transparent;}:focus::-webkit-input-placeholder{color:transparent;}:focus:-ms-input-placeholder{color:transparent;}:focus::-ms-input-placeholder{color:transparent;}"], inputVariant, inputSize, function (props) {
  return (0, _BorderColorProperty["default"])((0, _objectSpread2["default"])({}, props, {
    borderColor: 'color4'
  }));
}, function (props) {
  return (0, _styledSystem.color)((0, _objectSpread2["default"])({}, props, {
    color: 'color11'
  }));
}, function (props) {
  return (0, _BackgroundColorProperty["default"])((0, _objectSpread2["default"])({}, props, {
    backgroundColor: 'color0'
  }));
}, _FontSizeProperty["default"], _LineHeightProperty["default"], _FontFamilyProperty["default"], _BorderRadiusProperty["default"], _BorderColorProperty["default"], _styledSystem.display, _styledSystem.space, function (props) {
  return (0, _styledSystem.color)((0, _objectSpread2["default"])({}, props, {
    color: 'color4'
  }));
}, function (props) {
  return (0, _styledSystem.color)((0, _objectSpread2["default"])({}, props, {
    color: 'color4'
  }));
}, function (props) {
  return (0, _styledSystem.color)((0, _objectSpread2["default"])({}, props, {
    color: 'color4'
  }));
}, function (props) {
  return (0, _styledSystem.color)((0, _objectSpread2["default"])({}, props, {
    color: 'color4'
  }));
});

exports.TextFieldBase = TextFieldBase;
TextFieldBase.propTypes = {
  /** Description of prop "px: padding-left and padding-right". */
  px: _propTypes["default"].number,

  /** Description of prop "px: padding-top and padding-bottom". */
  py: _propTypes["default"].number,
  lineHeight: _propTypes["default"].number,
  size: _propTypes["default"].string,
  fontSize: _propTypes["default"].number,

  /**input */
  input: _propTypes["default"].object,

  /**input */
  type: _propTypes["default"].string,

  /**class */
  className: _propTypes["default"].string,

  /**input */
  placeholder: _propTypes["default"].string,

  /**input */
  required: _propTypes["default"].string
};
TextFieldBase.defaultProps = {
  size: 'lg',
  variant: 'default',
  fontFamily: 'secondary'
};
var _default = TextFieldBase;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlRleHRGaWVsZEJhc2UuanMiXSwibmFtZXMiOlsiaW5wdXRTaXplIiwia2V5IiwicHJvcCIsImlucHV0VmFyaWFudCIsIlRleHRGaWVsZEJhc2UiLCJzdHlsZWQiLCJpbnB1dCIsInByb3BzIiwiYm9yZGVyQ29sb3IiLCJjb2xvciIsImJhY2tncm91bmRDb2xvciIsIkZvbnRTaXplUHJvcGVydHkiLCJMaW5lSGVpZ2h0UHJvcGVydHkiLCJGb250RmFtaWx5UHJvcGVydHkiLCJCb3JkZXJSYWRpdXNQcm9wZXJ0eSIsIkJvcmRlckNvbG9yUHJvcGVydHkiLCJkaXNwbGF5Iiwic3BhY2UiLCJwcm9wVHlwZXMiLCJweCIsIlByb3BUeXBlcyIsIm51bWJlciIsInB5IiwibGluZUhlaWdodCIsInNpemUiLCJzdHJpbmciLCJmb250U2l6ZSIsIm9iamVjdCIsInR5cGUiLCJjbGFzc05hbWUiLCJwbGFjZWhvbGRlciIsInJlcXVpcmVkIiwiZGVmYXVsdFByb3BzIiwidmFyaWFudCIsImZvbnRGYW1pbHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFOQTtBQVFBLElBQU1BLFNBQVMsR0FBRywyQkFBUTtBQUN4QkMsRUFBQUEsR0FBRyxFQUFFLG1CQURtQjtBQUV4QkMsRUFBQUEsSUFBSSxFQUFFO0FBRmtCLENBQVIsQ0FBbEI7QUFJQSxJQUFNQyxZQUFZLEdBQUcsMkJBQVE7QUFDM0JGLEVBQUFBLEdBQUcsRUFBRSxzQkFEc0I7QUFFM0JDLEVBQUFBLElBQUksRUFBRTtBQUZxQixDQUFSLENBQXJCO0FBS0E7Ozs7O0FBSU8sSUFBTUUsYUFBYTtBQUFBO0FBQUdDLDZCQUFPQyxLQUFWO0FBQUE7QUFBQSwrYkFDdEJILFlBRHNCLEVBRXRCSCxTQUZzQixFQUt0QixVQUFBTyxLQUFLO0FBQUEsU0FBSSx3RUFBeUJBLEtBQXpCO0FBQWdDQyxJQUFBQSxXQUFXLEVBQUU7QUFBN0MsS0FBSjtBQUFBLENBTGlCLEVBTXRCLFVBQUFELEtBQUs7QUFBQSxTQUFJLDREQUFXQSxLQUFYO0FBQWtCRSxJQUFBQSxLQUFLLEVBQUU7QUFBekIsS0FBSjtBQUFBLENBTmlCLEVBT3RCLFVBQUFGLEtBQUs7QUFBQSxTQUFJLDRFQUE2QkEsS0FBN0I7QUFBb0NHLElBQUFBLGVBQWUsRUFBRTtBQUFyRCxLQUFKO0FBQUEsQ0FQaUIsRUFVdEJDLDRCQVZzQixFQVd0QkMsOEJBWHNCLEVBWXRCQyw4QkFac0IsRUFhdEJDLGdDQWJzQixFQWN0QkMsK0JBZHNCLEVBZXRCQyxxQkFmc0IsRUFnQnRCQyxtQkFoQnNCLEVBa0JwQixVQUFBVixLQUFLO0FBQUEsU0FBSSw0REFBV0EsS0FBWDtBQUFrQkUsSUFBQUEsS0FBSyxFQUFFO0FBQXpCLEtBQUo7QUFBQSxDQWxCZSxFQXFCcEIsVUFBQUYsS0FBSztBQUFBLFNBQUksNERBQVdBLEtBQVg7QUFBa0JFLElBQUFBLEtBQUssRUFBRTtBQUF6QixLQUFKO0FBQUEsQ0FyQmUsRUF3QnBCLFVBQUFGLEtBQUs7QUFBQSxTQUFJLDREQUFXQSxLQUFYO0FBQWtCRSxJQUFBQSxLQUFLLEVBQUU7QUFBekIsS0FBSjtBQUFBLENBeEJlLEVBMkJwQixVQUFBRixLQUFLO0FBQUEsU0FBSSw0REFBV0EsS0FBWDtBQUFrQkUsSUFBQUEsS0FBSyxFQUFFO0FBQXpCLEtBQUo7QUFBQSxDQTNCZSxDQUFuQjs7O0FBNENQTCxhQUFhLENBQUNjLFNBQWQsR0FBMEI7QUFDeEI7QUFDQUMsRUFBQUEsRUFBRSxFQUFFQyxzQkFBVUMsTUFGVTs7QUFHeEI7QUFDQUMsRUFBQUEsRUFBRSxFQUFFRixzQkFBVUMsTUFKVTtBQUt4QkUsRUFBQUEsVUFBVSxFQUFFSCxzQkFBVUMsTUFMRTtBQU14QkcsRUFBQUEsSUFBSSxFQUFFSixzQkFBVUssTUFOUTtBQU94QkMsRUFBQUEsUUFBUSxFQUFFTixzQkFBVUMsTUFQSTs7QUFReEI7QUFDQWYsRUFBQUEsS0FBSyxFQUFFYyxzQkFBVU8sTUFUTzs7QUFVeEI7QUFDQUMsRUFBQUEsSUFBSSxFQUFFUixzQkFBVUssTUFYUTs7QUFZeEI7QUFDQUksRUFBQUEsU0FBUyxFQUFFVCxzQkFBVUssTUFiRzs7QUFjeEI7QUFDQUssRUFBQUEsV0FBVyxFQUFFVixzQkFBVUssTUFmQzs7QUFnQnhCO0FBQ0FNLEVBQUFBLFFBQVEsRUFBRVgsc0JBQVVLO0FBakJJLENBQTFCO0FBb0JBckIsYUFBYSxDQUFDNEIsWUFBZCxHQUE2QjtBQUMzQlIsRUFBQUEsSUFBSSxFQUFFLElBRHFCO0FBRTNCUyxFQUFBQSxPQUFPLEVBQUUsU0FGa0I7QUFHM0JDLEVBQUFBLFVBQVUsRUFBRTtBQUhlLENBQTdCO2VBTWU5QixhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcclxuaW1wb3J0IHN0eWxlZCBmcm9tICdzdHlsZWQtY29tcG9uZW50cyc7XHJcbmltcG9ydCB7IGNvbG9yLCBkaXNwbGF5LCBzcGFjZSwgdmFyaWFudCB9IGZyb20gJ3N0eWxlZC1zeXN0ZW0nO1xyXG5cclxuLyoqIFN0eWxlIHByb3BlcnR5ICovXHJcbmltcG9ydCBCb3JkZXJSYWRpdXNQcm9wZXJ0eSBmcm9tICcuLi8uLi9zdHlsZXMvc3R5bGVQcm9wZXJ0eS9Cb3JkZXJSYWRpdXNQcm9wZXJ0eSc7XHJcbmltcG9ydCBCb3JkZXJDb2xvclByb3BlcnR5IGZyb20gJy4uLy4uL3N0eWxlcy9zdHlsZVByb3BlcnR5L0JvcmRlckNvbG9yUHJvcGVydHknO1xyXG5pbXBvcnQgRm9udFNpemVQcm9wZXJ0eSBmcm9tICcuLi8uLi9zdHlsZXMvc3R5bGVQcm9wZXJ0eS9Gb250U2l6ZVByb3BlcnR5JztcclxuaW1wb3J0IExpbmVIZWlnaHRQcm9wZXJ0eSBmcm9tICcuLi8uLi9zdHlsZXMvc3R5bGVQcm9wZXJ0eS9MaW5lSGVpZ2h0UHJvcGVydHknO1xyXG5pbXBvcnQgRm9udEZhbWlseVByb3BlcnR5IGZyb20gJy4uLy4uL3N0eWxlcy9Gb250RmFtaWx5UHJvcGVydHknO1xyXG5pbXBvcnQgQmFja2dyb3VuZENvbG9yUHJvcGVydHkgZnJvbSAnLi4vLi4vc3R5bGVzL3N0eWxlUHJvcGVydHkvQmFja2dyb3VuZENvbG9yUHJvcGVydHknO1xyXG5cclxuY29uc3QgaW5wdXRTaXplID0gdmFyaWFudCh7XHJcbiAga2V5OiAndmFyaWFudC5pbnB1dFNpemUnLFxyXG4gIHByb3A6ICdzaXplJyxcclxufSk7XHJcbmNvbnN0IGlucHV0VmFyaWFudCA9IHZhcmlhbnQoe1xyXG4gIGtleTogJ3ZhcmlhbnQuaW5wdXRWYXJpYW50JyxcclxuICBwcm9wOiAndmFyaWFudCcsXHJcbn0pO1xyXG5cclxuLyoqXHJcbiAqIFRleHQgRmllbGQgQmFzZVxyXG4gKiBAZXhhbXBsZSAuL1RleHRGaWVsZEJhc2UuZXhhbXBsZS5tZFxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFRleHRGaWVsZEJhc2UgPSBzdHlsZWQuaW5wdXRgXHJcbiAgJHtpbnB1dFZhcmlhbnR9O1xyXG4gICR7aW5wdXRTaXplfTtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXI6IDFweCBzb2xpZDtcclxuICAke3Byb3BzID0+IEJvcmRlckNvbG9yUHJvcGVydHkoeyAuLi5wcm9wcywgYm9yZGVyQ29sb3I6ICdjb2xvcjQnIH0pfTtcclxuICAke3Byb3BzID0+IGNvbG9yKHsgLi4ucHJvcHMsIGNvbG9yOiAnY29sb3IxMScgfSl9O1xyXG4gICR7cHJvcHMgPT4gQmFja2dyb3VuZENvbG9yUHJvcGVydHkoeyAuLi5wcm9wcywgYmFja2dyb3VuZENvbG9yOiAnY29sb3IwJyB9KX07XHJcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgJHtGb250U2l6ZVByb3BlcnR5fTtcclxuICAke0xpbmVIZWlnaHRQcm9wZXJ0eX07XHJcbiAgJHtGb250RmFtaWx5UHJvcGVydHl9O1xyXG4gICR7Qm9yZGVyUmFkaXVzUHJvcGVydHl9O1xyXG4gICR7Qm9yZGVyQ29sb3JQcm9wZXJ0eX07XHJcbiAgJHtkaXNwbGF5fTtcclxuICAke3NwYWNlfTtcclxuICA6OnBsYWNlaG9sZGVyIHtcclxuICAgICR7cHJvcHMgPT4gY29sb3IoeyAuLi5wcm9wcywgY29sb3I6ICdjb2xvcjQnIH0pfVxyXG4gIH1cclxuICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgJHtwcm9wcyA9PiBjb2xvcih7IC4uLnByb3BzLCBjb2xvcjogJ2NvbG9yNCcgfSl9XHJcbiAgfVxyXG4gIDotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgJHtwcm9wcyA9PiBjb2xvcih7IC4uLnByb3BzLCBjb2xvcjogJ2NvbG9yNCcgfSl9XHJcbiAgfVxyXG4gIDo6LW1zLWlucHV0LXBsYWNlaG9sZGVyIHtcclxuICAgICR7cHJvcHMgPT4gY29sb3IoeyAuLi5wcm9wcywgY29sb3I6ICdjb2xvcjQnIH0pfVxyXG4gIH1cclxuXHJcbiAgOmZvY3VzOjpwbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIDpmb2N1czo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG4gIDpmb2N1czotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gIH1cclxuICA6Zm9jdXM6Oi1tcy1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBjb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgfVxyXG5gO1xyXG5cclxuVGV4dEZpZWxkQmFzZS5wcm9wVHlwZXMgPSB7XHJcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHByb3AgXCJweDogcGFkZGluZy1sZWZ0IGFuZCBwYWRkaW5nLXJpZ2h0XCIuICovXHJcbiAgcHg6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgLyoqIERlc2NyaXB0aW9uIG9mIHByb3AgXCJweDogcGFkZGluZy10b3AgYW5kIHBhZGRpbmctYm90dG9tXCIuICovXHJcbiAgcHk6IFByb3BUeXBlcy5udW1iZXIsXHJcbiAgbGluZUhlaWdodDogUHJvcFR5cGVzLm51bWJlcixcclxuICBzaXplOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIGZvbnRTaXplOiBQcm9wVHlwZXMubnVtYmVyLFxyXG4gIC8qKmlucHV0ICovXHJcbiAgaW5wdXQ6IFByb3BUeXBlcy5vYmplY3QsXHJcbiAgLyoqaW5wdXQgKi9cclxuICB0eXBlOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIC8qKmNsYXNzICovXHJcbiAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxyXG4gIC8qKmlucHV0ICovXHJcbiAgcGxhY2Vob2xkZXI6IFByb3BUeXBlcy5zdHJpbmcsXHJcbiAgLyoqaW5wdXQgKi9cclxuICByZXF1aXJlZDogUHJvcFR5cGVzLnN0cmluZyxcclxufTtcclxuXHJcblRleHRGaWVsZEJhc2UuZGVmYXVsdFByb3BzID0ge1xyXG4gIHNpemU6ICdsZycsXHJcbiAgdmFyaWFudDogJ2RlZmF1bHQnLFxyXG4gIGZvbnRGYW1pbHk6ICdzZWNvbmRhcnknLFxyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgVGV4dEZpZWxkQmFzZTtcclxuIl19