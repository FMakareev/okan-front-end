{"version":3,"sources":["FormProfileCreateUser.js"],"names":["notificationOpts","success","title","message","position","autoDismiss","error","FormProfileCreateUser","props","state","submit","bind","value","data","variables","Object","assign","then","response","setNotificationSuccess","reset","setNotificationError","SubmissionError","_error","handleSubmit","pristine","submitting","invalid","TextFieldWithTooltip","required","DayPickerField","MaskedInputField","isEmail","PictureUploadPreview","Component","formPropTypes","CreateUserMutation","name","values","dispatch","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Field, reduxForm, SubmissionError, Form, getFormValues } from 'redux-form';\r\nimport { graphql } from 'react-apollo';\r\nimport { connect } from 'react-redux';\r\nimport { success, error } from 'react-notification-system-redux';\r\nimport { captureException } from '../../../../hocs/withSentry/withSentry';\r\n\r\n/** View */\r\nimport TextFieldWithTooltip from '@lib/ui/TextFieldWithTooltip/TextFieldWithTooltip';\r\nimport ButtonWithImage from '@lib/ui/ButtonWithImage/ButtonWithImage';\r\nimport { SvgPlay } from '@lib/ui/Icons/SvgPlay';\r\nimport Text from '@lib/ui/Text/Text';\r\nimport PictureUploadPreview from '@lib/ui/PictureUploadPreview/PictureUploadPreview';\r\nimport DayPickerField from '@lib/ui/DayPickerField/DayPickerField';\r\nimport MaskedInputField from '@lib/ui/MaskedInputField/MaskedInputField';\r\n\r\n/**PropTypes */\r\nimport { formPropTypes } from '../../../../propTypes/Forms/FormPropTypes';\r\n\r\n/** Validation */\r\nimport required from '../../../../utils/validation/required';\r\nimport isEmail from '../../../../utils/validation/isEmail';\r\n\r\n/** GraphQL schema */\r\nimport CreateUserMutation from './CreateUserMutation.graphql';\r\nimport { TextFieldFirstWrapper } from '@lib/ui/TextFieldFirstWrapper/TextFieldFirstWrapper';\r\nimport { TextFieldLastWrapper } from '@lib/ui/TextFieldLastWrapper/TextFieldLastWrapper';\r\n\r\nconst notificationOpts = () => ({\r\n  success: {\r\n    title: 'Пользователь создан',\r\n    message: 'Пользователь создан',\r\n    position: 'tr',\r\n    autoDismiss: 2,\r\n  },\r\n  error: {\r\n    title: 'Пользователь не создан',\r\n    message: 'Пользователь не создан',\r\n    position: 'tr',\r\n    autoDismiss: 2,\r\n  },\r\n});\r\n\r\nexport class FormProfileCreateUser extends Component {\r\n  static propTypes = { ...formPropTypes };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {};\r\n\r\n    this.submit = this.submit.bind(this);\r\n  }\r\n\r\n  submit(value) {\r\n    const data = { variables: Object.assign({}, value) };\r\n\r\n    return this.props['@apollo/create'](data)\r\n      .then(response => {\r\n        this.props.setNotificationSuccess(notificationOpts().success);\r\n        this.props.reset();\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        const { message } = error;\r\n        this.props.setNotificationError(notificationOpts().error);\r\n        captureException(error);\r\n\r\n        throw new SubmissionError({ _error: message });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit, pristine, submitting, invalid } = this.props;\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit(this.submit)}>\r\n        <Text variant={'documentTitle'} mb={13}>\r\n          Создать пользователя\r\n        </Text>\r\n\r\n        <TextFieldFirstWrapper>\r\n          <Field\r\n            name=\"firstname\"\r\n            component={TextFieldWithTooltip}\r\n            placeholder={'Фамилия'}\r\n            type=\"text\"\r\n            size={'md'}\r\n            fontFamily={'secondary'}\r\n            validate={required}\r\n          />\r\n        </TextFieldFirstWrapper>\r\n\r\n        <Field\r\n          name=\"lastname\"\r\n          component={TextFieldWithTooltip}\r\n          placeholder={'Имя'}\r\n          type=\"text\"\r\n          size={'md'}\r\n          variant={'primary'}\r\n          validate={required}\r\n          fontFamily={'secondary'}\r\n        />\r\n\r\n        <Field\r\n          name=\"patronymic\"\r\n          component={TextFieldWithTooltip}\r\n          placeholder={'Отчество'}\r\n          type=\"text\"\r\n          size={'md'}\r\n          variant={'primary'}\r\n          validate={required}\r\n          fontFamily={'secondary'}\r\n        />\r\n\r\n        <Field\r\n          name=\"birthdate\"\r\n          component={DayPickerField}\r\n          placeholder={'Дата рождения'}\r\n          type=\"text\"\r\n          variant={'primary'}\r\n          validate={required}\r\n          fontFamily={'secondary'}\r\n        />\r\n\r\n        <Field\r\n          name=\"position\"\r\n          component={TextFieldWithTooltip}\r\n          placeholder={'Должность'}\r\n          type=\"text\"\r\n          size={'md'}\r\n          variant={'primary'}\r\n          validate={required}\r\n          fontFamily={'secondary'}\r\n        />\r\n\r\n        <Field\r\n          name=\"phone\"\r\n          component={MaskedInputField}\r\n          placeholder={'( 111 ) - 111 - 11 - 11'}\r\n          type=\"text\"\r\n          validate={required}\r\n          fontFamily={'secondary'}\r\n        />\r\n\r\n        <Field\r\n          name=\"email\"\r\n          component={TextFieldWithTooltip}\r\n          placeholder={'Электронная почта'}\r\n          type=\"text\"\r\n          size={'md'}\r\n          variant={'primary'}\r\n          validate={[required, isEmail]}\r\n        />\r\n\r\n        <TextFieldLastWrapper mb={11}>\r\n          <Field\r\n            name=\"signature\"\r\n            component={PictureUploadPreview}\r\n            placeholder={'Загрузить подпись'}\r\n            type=\"text\"\r\n            validate={required}\r\n          />\r\n        </TextFieldLastWrapper>\r\n\r\n        <ButtonWithImage\r\n          type=\"submit\"\r\n          variant={'large'}\r\n          size={'medium'}\r\n          children={'Создать пользователя'}\r\n          rightIcon={SvgPlay()}\r\n          ml={9}\r\n          disabled={pristine || submitting || invalid}\r\n          width={'100%'}\r\n          widthIcon={'10px'}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nFormProfileCreateUser = graphql(CreateUserMutation, {\r\n  name: '@apollo/create',\r\n})(FormProfileCreateUser);\r\n\r\nFormProfileCreateUser = connect(\r\n  state => ({\r\n    values: getFormValues('FormProfileCreateUser')(state),\r\n  }),\r\n  dispatch => ({\r\n    // addUser: user => dispatch({ type: USER_ADD, user }), // TODO review: не забываем импортировать, и addUser тут не нужно\r\n    setNotificationSuccess: message => dispatch(success(message)),\r\n    setNotificationError: message => dispatch(error(message)),\r\n  }),\r\n)(FormProfileCreateUser);\r\n\r\nFormProfileCreateUser = reduxForm({\r\n  form: 'FormProfileCreateUser',\r\n})(FormProfileCreateUser);\r\n\r\nexport default FormProfileCreateUser;\r\n"]}