{"version":3,"sources":["RenderError.js"],"names":["Wrapper","Card","color","IconStyled","Icon","RenderError","title","message","icon","iconColor","propTypes","PropTypes","oneOfType","element","string","defaultProps","ic_error_outline"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;AALA;;AAGA;AAIA,IAAMA,OAAO;AAAA;AAAG,kCAAOC,gBAAP,CAAH;AAAA;AAAA,oFAKTC,mBALS,CAAb;AAQA,IAAMC,UAAU;AAAA;AAAG,kCAAOC,mBAAP,CAAH;AAAA;AAAA,mDAGZF,mBAHY,CAAhB;AAMA;;;;;AAIO,IAAMG,WAAW,GAAG,SAAdA,WAAc;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBC,IAAnB,QAAmBA,IAAnB;AAAA,MAAyBC,SAAzB,QAAyBA,SAAzB;AAAA,SACzB,gCAAC,OAAD;AAAS,IAAA,CAAC,EAAE;AAAZ,KACE,gCAAC,UAAD;AAAY,IAAA,KAAK,EAAEA,SAAnB;AAA8B,IAAA,IAAI,EAAE,EAApC;AAAwC,IAAA,IAAI,EAAED;AAA9C,IADF,EAEE,gCAAC,gBAAD;AAAM,IAAA,QAAQ,EAAE,CAAhB;AAAmB,IAAA,SAAS,EAAE;AAA9B,KACGF,KAAK,IAAI,OADZ,CAFF,EAKE,gCAAC,gBAAD;AAAM,IAAA,QAAQ,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAE,WAAvB;AAAoC,IAAA,KAAK,EAAE;AAA3C,KACGC,OADH,CALF,CADyB;AAAA,CAApB;;;AAYPF,WAAW,CAACK,SAAZ,GAAwB;AACtB;AACAJ,EAAAA,KAAK,EAAEK,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,OAAX,EAAoBF,sBAAUG,MAA9B,CAApB,CAFe;AAGtBP,EAAAA,OAAO,EAAEI,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,OAAX,EAAoBF,sBAAUG,MAA9B,CAApB,CAHa;AAItBN,EAAAA,IAAI,EAAEG,sBAAUC,SAAV,CAAoB,CAACD,sBAAUE,OAAX,EAAoBF,sBAAUG,MAA9B,CAApB,CAJgB;AAKtBL,EAAAA,SAAS,EAAEE,sBAAUG;AALC,CAAxB;AAOAT,WAAW,CAACU,YAAZ,GAA2B;AACzBT,EAAAA,KAAK,EAAE,OADkB;AAEzBC,EAAAA,OAAO,EAAE,kBAFgB;AAGzBC,EAAAA,IAAI,EAAEQ,kCAHmB;AAIzBP,EAAAA,SAAS,EAAE;AAJc,CAA3B;eAOeJ,W","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { color } from 'styled-system';\r\nimport { Icon } from 'react-icons-kit';\r\n\r\n/**Icons */\r\nimport { ic_error_outline } from 'react-icons-kit/md/ic_error_outline';\r\n\r\n/** View */\r\nimport Text from '../Text/Text';\r\nimport Card from '../Card/Card';\r\n\r\nconst Wrapper = styled(Card)`\r\n  max-width: 320px;\r\n  font-weight: normal;\r\n  text-align: center;\r\n  margin: 64px auto;\r\n  ${color};\r\n`;\r\n\r\nconst IconStyled = styled(Icon)`\r\n  font-weight: normal;\r\n  text-align: center;\r\n  ${color};\r\n`;\r\n\r\n/**\r\n * Компонент ошибки\r\n * @example ./RenderError.example.md\r\n */\r\nexport const RenderError = ({ title, message, icon, iconColor }) => (\r\n  <Wrapper p={5}>\r\n    <IconStyled color={iconColor} size={64} icon={icon} />\r\n    <Text fontSize={7} textAlign={'center'}>\r\n      {title || 'Error'}\r\n    </Text>\r\n    <Text fontSize={5} wb={'break-all'} color={'#000'}>\r\n      {message}\r\n    </Text>\r\n  </Wrapper>\r\n);\r\n\r\nRenderError.propTypes = {\r\n  /** error */\r\n  title: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  message: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  icon: PropTypes.oneOfType([PropTypes.element, PropTypes.string]),\r\n  iconColor: PropTypes.string,\r\n};\r\nRenderError.defaultProps = {\r\n  title: 'Error',\r\n  message: 'unexpected error',\r\n  icon: ic_error_outline,\r\n  iconColor: 'color6',\r\n};\r\n\r\nexport default RenderError;\r\n"]}