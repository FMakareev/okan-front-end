{"version":3,"sources":["mocksClient.js"],"names":["defaultMocks","Query","userlist","faker","random","number","useritem","documentitem","currentuseritem","result","Promise","resolve","reject","setTimeout","templatelist","isTemplate","projectitem","query","id","projectList","revisionitem","revisionItem","revisionList","documentlist","notificationList","celllist","props","cellitem","cellTree","find","item","blockitem","Mutation","createuser","mutation","email","GraphQLError","activateuser","updateuser","JSON","stringify","errors","message","changepassword","createdocument","children","name","createrevision","console","log","childcell","createcell","prevcell","parent","cell","bindingcell","unbindingcell","createproject","project","updateproject","updatedocument","document","block","mocksClient","schema"],"mappings":"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","sourcesContent":["import faker from 'faker';\r\nimport {GraphQLError} from 'graphql';\r\n\r\n/** Apollo Client Mock */\r\nimport setupClient from './helpers/apolloClientMock';\r\n\r\n/** Constants */\r\nimport {ROLE_ADMIN, ROLE_USER} from '../shared/roles';\r\n\r\n/** Schema */\r\nimport schema from './schema.graphqls';\r\n\r\n/** Mock query */\r\nimport {userlist} from './graphql/query/userlist';\r\nimport {useritem} from './graphql/query/userItem';\r\nimport {celItem} from './graphql/query/celItem';\r\nimport cellTree from './graphql/query/cellTree';\r\nimport {celllist} from \"./graphql/query/celllist\";\r\nimport { documentitem } from './graphql/query/documentItem';\r\nimport { documentlist } from './graphql/query/documentlist';\r\nimport { projectitem } from './graphql/query/projectitem';\r\nimport { notificationList } from './graphql/query/notificationList';\r\nimport { notificationItem } from './graphql/query/notificationItem';\r\nimport { projectlist } from './graphql/query/projectlist';\r\nimport { revisionitem } from './graphql/query/revisionitem';\r\nimport { revisionList } from './graphql/query/revisionList';\r\nimport { blockitem } from './graphql/query/blockitem';\r\n\r\n\r\n\r\nconst defaultMocks = {\r\n  Query: () => ({\r\n    userlist: () => userlist(faker.random.number(5)),\r\n    useritem,\r\n    documentitem: () => documentitem(),\r\n    currentuseritem: () => {\r\n      const result = useritem();\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(result);\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n    templatelist:()=>{\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(projectlist(10,{\r\n            isTemplate: true,\r\n          }));\r\n        }, faker.random.number(2000));\r\n      });\r\n    },\r\n    projectitem: (query, {id}) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            ...projectitem(),\r\n            id,\r\n          });\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n    projectList: (query, {id}) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(projectlist(4));\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n\r\n    revisionitem: () => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(revisionItem());\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n\r\n    revisionList: () => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(revisionList(2));\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n\r\n    documentlist: () => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(documentlist(1));\r\n        }, faker.random.number(0))\r\n      })\r\n    },\r\n\r\n    notificationList: () => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(notificationList(1));\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n\r\n    celllist: (query, props) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve(celllist());\r\n        }, faker.random.number(0));\r\n      });\r\n    },\r\n    cellitem: (query, props) => {\r\n\r\n      const {id} = props;\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          const result = cellTree.find(item => item.id === id);\r\n          resolve(result);\r\n        }, faker.random.number(0))\r\n      })\r\n    },\r\n\r\n    blockitem: (query, props) => {\r\n      const {id} = props;\r\n      return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n          resolve(blockitem());\r\n        }, faker.random.number(0))\r\n      })\r\n    },\r\n  }),\r\n\r\n  Mutation: () => ({\r\n    /**\r\n     * @params {func} mutation - этот же запрос\r\n     * @params {object} props - аргументы которые были переданы\r\n     * */\r\n    createuser: (mutation, props) => {\r\n      // TODO review: добавить рандомную задержку от 500 до 3000\r\n      return setTimeout(() => {\r\n        if (props.email === 'error@okan.su') {\r\n          throw new GraphQLError('already registered');\r\n        } else {\r\n          return props;\r\n        }\r\n      }, 10000);\r\n    },\r\n\r\n    activateuser: (mutation, props) => {\r\n      // TODO review: добавить рандомную задержку от 500 до 3000\r\n      return setTimeout(() => {\r\n        if (props.email === 'error@okan.su') {\r\n          throw new GraphQLError('already registered');\r\n        } else {\r\n          return props;\r\n        }\r\n      }, 5000);\r\n    },\r\n\r\n    updateuser: (mutation, props) =>\r\n      // для имитации запроса к серверу с рандомной задержкой и результатом.\r\n      new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          faker.random.number(1)\r\n            ? resolve({...useritem()})\r\n            : reject(\r\n            JSON.stringify({\r\n              errors: [\r\n                {\r\n                  message: 'error!',\r\n                },\r\n              ],\r\n            }),\r\n            );\r\n        }, faker.random.number(2000));\r\n      }),\r\n\r\n    changepassword: (mutation, props) => props,\r\n\r\n    createdocument: (mutation, props) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          faker.random.number(1) ?\r\n            resolve({\r\n              ...documentitem(),\r\n              children: null,\r\n              name: props.name\r\n            }) :\r\n            reject(\r\n              JSON.stringify({\r\n                errors: [\r\n                  {\r\n                    message: 'error!',\r\n                  },\r\n                ],\r\n              }));\r\n\r\n        }, faker.random.number(2000));\r\n      })\r\n    },\r\n\r\n    createrevision: (mutation, props) => {\r\n      console.log('createrevision: ', props);\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          faker.random.number(1) ?\r\n            resolve({\r\n              ...documentitem(),\r\n              childcell: null,\r\n              name: props.name\r\n            }) :\r\n            reject(\r\n              JSON.stringify({\r\n                errors: [\r\n                  {\r\n                    message: 'error!',\r\n                  },\r\n                ],\r\n              }));\r\n        }, faker.random.number(2000));\r\n      })\r\n    },\r\n\r\n    createcell: (mutation, props) => {\r\n\r\n      console.log('cellitem: ', props);\r\n      const {prevcell, parent} = props;\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            cell: {\r\n              ...celItem({\r\n                prevcell,\r\n                parent\r\n              }),\r\n            }\r\n          });\r\n        }, faker.random.number(2000));\r\n      });\r\n    },\r\n\r\n    bindingcell: (mutation, props) => {\r\n      const {parent} = props;\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            cell:{\r\n              ...celItem({\r\n                parent\r\n              }),\r\n            },\r\n          })\r\n        }, faker.random.number(2000));\r\n      })\r\n    },\r\n\r\n    unbindingcell: (mutation, props) => {\r\n      const {cell} = props;\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            cell:{\r\n              ...celItem({\r\n                cell\r\n              }),\r\n            },\r\n          })\r\n        }, faker.random.number(2000));\r\n      })\r\n    },\r\n\r\n    createproject: (mutation, props) => {\r\n      console.log('createproject: ', props);\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            project:{\r\n              ...projectitem(),\r\n              ...props,\r\n            },\r\n          });\r\n        }, faker.random.number(2000));\r\n      });\r\n    },\r\n\r\n    updateproject: (mutation, props) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            project:{\r\n              ...projectitem(),\r\n              ...props,\r\n            },\r\n          });\r\n        }, faker.random.number(2000));\r\n      });\r\n    },\r\n\r\n    updatedocument: (mutation, props) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            document:{\r\n              ...documentitem(),\r\n              ...props,\r\n            },\r\n          });\r\n        }, faker.random.number(2000));\r\n      });\r\n    },\r\n\r\n    createdocument: (mutation, props) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          const document = {\r\n            ...documentitem(),\r\n            ...props,\r\n          }\r\n          console.log('documentitem(): ', documentitem());\r\n          console.log('document: ', document);\r\n          console.log('document: ', props);\r\n          resolve({\r\n            document:document,\r\n          });\r\n        }, faker.random.number(2000));\r\n      });\r\n    },\r\n\r\n    createblock: (mutation, props) => {\r\n      return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n          resolve({\r\n            block: {\r\n              ...blockitem(props)\r\n            },\r\n          });\r\n        }, faker.random.number(2000));\r\n      });\r\n    }\r\n  }),\r\n};\r\n\r\nexport const mocksClient = setupClient(defaultMocks, schema)();\r\n\r\nexport default mocksClient;\r\n"]}